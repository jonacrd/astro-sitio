#!/usr/bin/env node

/**
 * Script para verificar que el grid dense est√© aplicado
 */

import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';
import fs from 'fs';
import path from 'path';

config({ path: '.env' });

const supabaseUrl = process.env.PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Variables de entorno no configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function verifyGridDense() {
  console.log('üîç Verificando que el grid dense est√© aplicado...\n');
  
  try {
    // 1. Verificar que DynamicGridBlocksSimple tiene grid-auto-flow:dense
    console.log('üìÑ Verificando DynamicGridBlocksSimple...');
    const simplePath = path.join(process.cwd(), 'src/components/react/DynamicGridBlocksSimple.tsx');
    const simpleContent = fs.readFileSync(simplePath, 'utf8');
    
    if (simpleContent.includes('[grid-auto-flow:dense]')) {
      console.log('‚úÖ Grid dense aplicado: [grid-auto-flow:dense]');
    } else {
      console.log('‚ùå Grid dense no aplicado');
    }
    
    if (simpleContent.includes('grid-cols-2')) {
      console.log('‚úÖ Grid 2 columnas: grid-cols-2');
    } else {
      console.log('‚ùå Grid 2 columnas no aplicado');
    }
    
    if (simpleContent.includes('gap-2')) {
      console.log('‚úÖ Gap peque√±o: gap-2');
    } else {
      console.log('‚ùå Gap peque√±o no aplicado');
    }
    
    // 2. Verificar productos disponibles
    console.log('\nüì¶ Verificando productos disponibles...');
    
    const { data: activeProducts, error: activeProductsError } = await supabase
      .from('seller_products')
      .select(`
        seller_id,
        product_id,
        price_cents,
        stock,
        active,
        products!inner (
          id,
          title,
          description,
          category,
          image_url
        )
      `)
      .eq('active', true)
      .gt('stock', 0)
      .limit(4);
    
    if (activeProductsError) {
      console.error('‚ùå Error cargando productos activos:', activeProductsError);
    } else {
      console.log(`‚úÖ Productos activos encontrados: ${activeProducts?.length || 0}`);
      
      if (activeProducts && activeProducts.length >= 4) {
        console.log('\nüìã MOSAICO 2x2 CON GRID DENSE:');
        console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
        console.log('‚îÇ   TALL      ‚îÇ   SHORT     ‚îÇ');
        console.log('‚îÇ   (3:4)     ‚îÇ   (4:3)     ‚îÇ');
        console.log('‚îÇ             ‚îÇ             ‚îÇ');
        console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
        console.log('‚îÇ   SHORT     ‚îÇ   TALL      ‚îÇ');
        console.log('‚îÇ   (4:3)     ‚îÇ   (3:4)     ‚îÇ');
        console.log('‚îÇ             ‚îÇ             ‚îÇ');
        console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
        console.log('   ‚Üë Grid dense elimina espacios');
        
        console.log('\nüìã Productos en el mosaico:');
        activeProducts.slice(0, 4).forEach((product, index) => {
          const pattern = ['tall', 'short', 'short', 'tall'][index];
          const position = ['Top-Left', 'Top-Right', 'Bottom-Left', 'Bottom-Right'][index];
          console.log(`  ${index + 1}. ${position} [${pattern.toUpperCase()}]: ${product.products.title}`);
          console.log(`     Precio: $${(product.price_cents / 100).toLocaleString('es-CL')}`);
          console.log(`     Stock: ${product.stock}`);
          console.log('');
        });
      } else {
        console.log('‚ö†Ô∏è No hay suficientes productos para el mosaico (necesita 4)');
      }
    }
    
    // 3. Instrucciones para el usuario
    console.log('\nüöÄ INSTRUCCIONES PARA VER LOS CAMBIOS:');
    console.log('1. ‚úÖ Grid dense aplicado correctamente');
    console.log('2. üîÑ El servidor deber√≠a recargar autom√°ticamente');
    console.log('3. üßπ Si no ves cambios, limpia la cach√© (Ctrl+F5)');
    console.log('4. üëÄ Busca la secci√≥n de productos destacados');
    console.log('5. üì± Verifica que el bloque de aceite est√© m√°s arriba');
    
    console.log('\nüí° CARACTER√çSTICAS DEL GRID DENSE:');
    console.log('   - ‚úÖ Grid dense: [grid-auto-flow:dense]');
    console.log('   - ‚úÖ Elimina espacios en blanco');
    console.log('   - ‚úÖ Los bloques se ajustan autom√°ticamente');
    console.log('   - ‚úÖ El bloque de aceite estar√° m√°s arriba');
    console.log('   - ‚úÖ Mantiene los tama√±os y formas originales');
    
    console.log('\nüéØ RESULTADO ESPERADO:');
    console.log('   - El bloque de aceite (bottom-right) estar√° m√°s arriba');
    console.log('   - Sin espacios negros entre bloques');
    console.log('   - Los bloques mantienen sus tama√±os originales');
    console.log('   - Grid m√°s compacto y balanceado');
    console.log('   - Mejor distribuci√≥n visual');
    
    console.log('\nüîß SI A√öN NO VES LOS CAMBIOS:');
    console.log('   1. Espera 30 segundos para que el servidor se reinicie');
    console.log('   2. Refresca la p√°gina (Ctrl+F5)');
    console.log('   3. Verifica que est√©s en la p√°gina principal');
    console.log('   4. Busca la secci√≥n de productos destacados');
    console.log('   5. El bloque de aceite deber√≠a estar m√°s arriba');
    console.log('   6. Si sigue sin funcionar, reinicia el servidor manualmente');
    
  } catch (error) {
    console.error('‚ùå Error en la verificaci√≥n:', error);
  }
}

verifyGridDense();




