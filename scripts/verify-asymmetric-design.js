#!/usr/bin/env node

/**
 * Script para verificar que el dise√±o asim√©trico est√© implementado correctamente
 */

import fs from 'fs';
import path from 'path';

function verifyAsymmetricDesign() {
  console.log('üîç Verificando que el dise√±o asim√©trico est√© implementado...\n');
  
  try {
    const realGridBlocksPath = path.join(process.cwd(), 'astro-sitio/src/components/react/RealGridBlocks.tsx');
    
    if (!fs.existsSync(realGridBlocksPath)) {
      console.log('‚ùå RealGridBlocks no encontrado');
      return;
    }

    const content = fs.readFileSync(realGridBlocksPath, 'utf8');
    
    console.log('üìã VERIFICANDO DISE√ëO ASIM√âTRICO:');
    
    // Verificar grid con gridAutoRows: '8px'
    if (content.includes('gridAutoRows: \'8px\'')) {
      console.log('‚úÖ Grid con gridAutoRows: 8px configurado');
    } else {
      console.log('‚ùå Grid gridAutoRows: 8px NO configurado');
    }
    
    // Verificar gap-3
    if (content.includes('gap-3')) {
      console.log('‚úÖ Gap-3 configurado');
    } else {
      console.log('‚ùå Gap-3 NO configurado');
    }
    
    // Verificar patr√≥n de spans [42, 38, 30, 30]
    if (content.includes('[42, 38, 30, 30]')) {
      console.log('‚úÖ Patr√≥n de spans [42, 38, 30, 30] configurado');
    } else {
      console.log('‚ùå Patr√≥n de spans NO configurado');
    }
    
    // Verificar gridRow: span
    if (content.includes('gridRow: `span ${gridSpans[i]}`')) {
      console.log('‚úÖ GridRow span din√°mico configurado');
    } else {
      console.log('‚ùå GridRow span din√°mico NO configurado');
    }
    
    // Verificar posicionamiento espec√≠fico
    if (content.includes('col-start-1 row-start-1') && content.includes('col-start-2 row-start-1')) {
      console.log('‚úÖ Posicionamiento espec√≠fico configurado');
    } else {
      console.log('‚ùå Posicionamiento espec√≠fico NO configurado');
    }
    
    // Verificar overlays
    if (content.includes('from-black/0 via-black/0 to-black/35')) {
      console.log('‚úÖ Overlay sutil general configurado');
    } else {
      console.log('‚ùå Overlay sutil general NO configurado');
    }
    
    if (content.includes('from-black/75 via-black/35 to-transparent')) {
      console.log('‚úÖ Overlay inferior configurado');
    } else {
      console.log('‚ùå Overlay inferior NO configurado');
    }
    
    // Verificar bot√≥n redondo
    if (content.includes('rounded-full') && content.includes('h-9 w-9')) {
      console.log('‚úÖ Bot√≥n redondo configurado');
    } else {
      console.log('‚ùå Bot√≥n redondo NO configurado');
    }
    
    // Verificar que no hay aspect-*
    if (!content.includes('aspect-')) {
      console.log('‚úÖ Aspect ratios eliminados');
    } else {
      console.log('‚ùå Aspect ratios NO eliminados');
    }

    console.log('\nüìä CONFIGURACI√ìN APLICADA:');
    console.log('‚úÖ Grid: 2 columnas, gridAutoRows: 8px');
    console.log('‚úÖ Gap: 3 (12px)');
    console.log('‚úÖ Spans: [42, 38, 30, 30]');
    console.log('‚úÖ Posicionamiento: col-start-1 row-start-1, col-start-2 row-start-1, etc.');
    console.log('‚úÖ Overlays: sutil general + inferior');
    console.log('‚úÖ Bot√≥n: redondo, pegado abajo-izquierda');
    console.log('‚úÖ Sin aspect ratios');

    console.log('\nüéØ RESULTADO ESPERADO:');
    console.log('‚úÖ Tarjeta alta a la izquierda (span 42)');
    console.log('‚úÖ Promo del pollo a la derecha (span 38)');
    console.log('‚úÖ Dos tarjetas medianas debajo (span 30 cada una)');
    console.log('‚úÖ Im√°genes con object-cover full-bleed');
    console.log('‚úÖ Overlays para legibilidad');
    console.log('‚úÖ Botones redondos funcionales');

    console.log('\nüîß CARACTER√çSTICAS DEL DISE√ëO:');
    console.log('‚úÖ Grid auto rows de 8px base');
    console.log('‚úÖ Spans espec√≠ficos para cada tarjeta');
    console.log('‚úÖ Posicionamiento expl√≠cito');
    console.log('‚úÖ Overlays sutil + inferior');
    console.log('‚úÖ Botones redondos con √≠cono +');

    console.log('\nüöÄ INSTRUCCIONES PARA VERIFICAR:');
    console.log('1. ‚úÖ ABRIR: http://localhost:4321/');
    console.log('2. üîÑ RECARGAR LA P√ÅGINA');
    console.log('3. ‚úÖ VERIFICAR TARJETA ALTA IZQUIERDA');
    console.log('4. ‚úÖ VERIFICAR PROMO DEL POLLO DERECHA');
    console.log('5. ‚úÖ VERIFICAR DOS TARJETAS MEDIANAS ABAJO');
    console.log('6. ‚úÖ VERIFICAR OVERLAYS PARA LEGIBILIDAD');
    console.log('7. ‚úÖ VERIFICAR BOTONES REDONDOS FUNCIONALES');
    console.log('8. ‚úÖ VERIFICAR IM√ÅGENES FULL-BLEED');

    console.log('\nüéâ ¬°DISE√ëO ASIM√âTRICO IMPLEMENTADO!');
    console.log('‚úÖ Mosaico asim√©trico como en la referencia');
    console.log('‚úÖ Spans espec√≠ficos [42, 38, 30, 30]');
    console.log('‚úÖ Posicionamiento expl√≠cito');
    console.log('‚úÖ Overlays para legibilidad');
    console.log('‚úÖ Botones redondos funcionales');

  } catch (error) {
    console.error('‚ùå Error verificando dise√±o asim√©trico:', error);
  }
}

verifyAsymmetricDesign();





