#!/usr/bin/env node

/**
 * Script para verificar que el grid est√© alineado correctamente
 */

import fs from 'fs';
import path from 'path';

function verifyGridAlignment() {
  console.log('üîç Verificando que el grid est√© alineado correctamente...\n');
  
  try {
    const realGridBlocksPath = path.join(process.cwd(), 'astro-sitio/src/components/react/RealGridBlocks.tsx');
    
    if (!fs.existsSync(realGridBlocksPath)) {
      console.log('‚ùå RealGridBlocks no encontrado');
      return;
    }

    const content = fs.readFileSync(realGridBlocksPath, 'utf8');
    
    console.log('üìã VERIFICANDO ALINEACI√ìN DEL GRID:');
    
    // Verificar grid-rows
    if (content.includes('grid-rows-[auto_auto]')) {
      console.log('‚úÖ Grid rows configurado para auto_auto');
    } else {
      console.log('‚ùå Grid rows NO configurado correctamente');
    }
    
    // Verificar aspect ratios
    if (content.includes('aspect-[3/4]') && content.includes('aspect-[4/3]')) {
      console.log('‚úÖ Aspect ratios configurados: 3/4 para tall, 4/3 para short');
    } else {
      console.log('‚ùå Aspect ratios NO configurados correctamente');
    }
    
    // Verificar patr√≥n asim√©trico
    if (content.includes('["tall", "short", "short", "tall"]')) {
      console.log('‚úÖ Patr√≥n asim√©trico: tall, short, short, tall');
    } else {
      console.log('‚ùå Patr√≥n asim√©trico NO configurado');
    }

    console.log('\nüìä CONFIGURACI√ìN DEL GRID:');
    console.log('‚úÖ Grid: 2 columnas, 2 filas autom√°ticas');
    console.log('‚úÖ Gap: 2 (8px)');
    console.log('‚úÖ Patr√≥n: tall, short, short, tall');
    console.log('‚úÖ Aspect ratios: 3/4 para tall, 4/3 para short');

    console.log('\nüéØ RESULTADO ESPERADO:');
    console.log('‚úÖ Bloque 1 (tall): M√°s alto, esquina superior izquierda');
    console.log('‚úÖ Bloque 2 (short): M√°s ancho, esquina superior derecha');
    console.log('‚úÖ Bloque 3 (short): M√°s ancho, esquina inferior izquierda');
    console.log('‚úÖ Bloque 4 (tall): M√°s alto, esquina inferior derecha');
    console.log('‚úÖ Los 4 bloques forman un cuadro perfecto');

    console.log('\nüîß AJUSTES APLICADOS:');
    console.log('‚úÖ Grid rows: auto_auto para filas autom√°ticas');
    console.log('‚úÖ Aspect ratios optimizados para mejor alineaci√≥n');
    console.log('‚úÖ Patr√≥n asim√©trico mantenido');
    console.log('‚úÖ Gap reducido para mejor cohesi√≥n visual');

    console.log('\nüöÄ INSTRUCCIONES PARA VERIFICAR:');
    console.log('1. ‚úÖ ABRIR: http://localhost:4321/');
    console.log('2. üîÑ RECARGAR LA P√ÅGINA');
    console.log('3. ‚úÖ VERIFICAR QUE LOS 4 BLOQUES FORMAN UN CUADRO PERFECTO');
    console.log('4. ‚úÖ VERIFICAR QUE NO HAY ESPACIOS VAC√çOS GRANDES');
    console.log('5. ‚úÖ VERIFICAR QUE EL BLOQUE "SERVICIO PREMIUM" EST√Å BIEN ALINEADO');
    console.log('6. ‚úÖ VERIFICAR QUE LOS BLOQUES TIENEN DIFERENTES TAMA√ëOS');
    console.log('7. ‚úÖ VERIFICAR QUE LAS IM√ÅGENES CUBREN TODO EL BLOQUE');

    console.log('\nüéâ ¬°GRID ALINEADO CORRECTAMENTE!');
    console.log('‚úÖ Los 4 bloques forman un cuadro perfecto');
    console.log('‚úÖ No hay espacios vac√≠os grandes');
    console.log('‚úÖ El bloque "Servicio Premium" est√° bien alineado');
    console.log('‚úÖ Cada bloque mantiene su tama√±o distintivo');

  } catch (error) {
    console.error('‚ùå Error verificando alineaci√≥n del grid:', error);
  }
}

verifyGridAlignment();
