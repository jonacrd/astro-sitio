---
import BaseLayout from '../../layouts/BaseLayout.astro'

export async function getStaticPaths() {
  // Categor√≠as REALES que existen en la base de datos
  const categories = [
    'supermercado',
    'comida',
    'abastos',
    'postres',
    'belleza',
    'bebidas_alcoholicas',
    'panaderia',
    'bebidas',
    'servicios'
  ];

  return categories.map(categoria => ({
    params: { categoria }
  }));
}

const { categoria } = Astro.params;

// Configuraci√≥n de categor√≠as REALES
const categoryConfig = {
  supermercado: {
    name: 'Supermercado',
    icon: 'üè™',
    color: 'from-blue-500 to-cyan-500',
    description: 'Todo lo que necesitas para tu hogar en un solo lugar'
  },
  comida: {
    name: 'Comida',
    icon: 'üçΩÔ∏è',
    color: 'from-orange-500 to-red-500',
    description: 'Deliciosa comida preparada por los mejores chefs'
  },
  abastos: {
    name: 'Abastos',
    icon: 'üõí',
    color: 'from-green-500 to-emerald-500',
    description: 'Productos de primera necesidad al mejor precio'
  },
  postres: {
    name: 'Postres',
    icon: 'üç∞',
    color: 'from-pink-500 to-rose-500',
    description: 'Dulces y postres para endulzar tu d√≠a'
  },
  belleza: {
    name: 'Belleza',
    icon: 'üíÑ',
    color: 'from-purple-500 to-pink-500',
    description: 'Productos de belleza y cuidado personal'
  },
  bebidas_alcoholicas: {
    name: 'Bebidas Alcoh√≥licas',
    icon: 'üç∫',
    color: 'from-amber-500 to-orange-500',
    description: 'Cervezas, vinos y licores'
  },
  panaderia: {
    name: 'Panader√≠a',
    icon: 'ü•ñ',
    color: 'from-yellow-500 to-orange-500',
    description: 'Pan fresco y productos de panader√≠a'
  },
  bebidas: {
    name: 'Bebidas',
    icon: 'ü•§',
    color: 'from-cyan-500 to-blue-500',
    description: 'Bebidas refrescantes y jugos naturales'
  },
  servicios: {
    name: 'Servicios',
    icon: 'üîß',
    color: 'from-indigo-500 to-purple-500',
    description: 'Servicios profesionales para tu hogar y negocio'
  }
};

const config = categoryConfig[categoria] || {
  name: 'Categor√≠a',
  icon: 'üì¶',
  color: 'from-gray-500 to-gray-600',
  description: 'Productos y servicios de esta categor√≠a'
};
---

<BaseLayout title={`${config.name} - Town`}>
  <main class="min-h-screen bg-gray-900 pb-20">
    <!-- Header de la categor√≠a -->
    <div class={`bg-gradient-to-r ${config.color} px-4 py-8`}>
      <div class="max-w-7xl mx-auto">
        <div class="flex items-center gap-4 mb-4">
          <div class="w-16 h-16 bg-white/20 rounded-xl flex items-center justify-center backdrop-blur-sm">
            <span class="text-4xl">{config.icon}</span>
          </div>
          <div>
            <h1 class="text-3xl font-bold text-white">{config.name}</h1>
            <p class="text-white/80">{config.description}</p>
          </div>
        </div>
        
        <!-- Filtros r√°pidos -->
        <div class="flex gap-3 overflow-x-auto scrollbar-hide pb-2">
          <button class="px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 text-white rounded-xl text-sm whitespace-nowrap hover:bg-white/20 hover:border-white/30 transition-all duration-200 font-medium">
            Todo
          </button>
          <button class="px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 text-white rounded-xl text-sm whitespace-nowrap hover:bg-white/20 hover:border-white/30 transition-all duration-200 font-medium">
            Destacados
          </button>
          <button class="px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 text-white rounded-xl text-sm whitespace-nowrap hover:bg-white/20 hover:border-white/30 transition-all duration-200 font-medium">
            M√°s Vendidos
          </button>
          <button class="px-4 py-2 bg-white/10 backdrop-blur-md border border-white/20 text-white rounded-xl text-sm whitespace-nowrap hover:bg-white/20 hover:border-white/30 transition-all duration-200 font-medium">
            Precio Bajo
          </button>
        </div>
      </div>
    </div>

    <!-- Contenido principal -->
    <div class="max-w-7xl mx-auto px-4 py-6">
      <!-- Estad√≠sticas r√°pidas -->
      <div class="grid grid-cols-3 gap-4 mb-8">
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-4 text-center hover:bg-white/15 transition-all duration-300 group">
          <div class="text-2xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent" id="total-vendors">0</div>
          <div class="text-gray-300 text-sm font-medium">Vendedores</div>
        </div>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-4 text-center hover:bg-white/15 transition-all duration-300 group">
          <div class="text-2xl font-bold bg-gradient-to-r from-green-400 to-emerald-400 bg-clip-text text-transparent" id="active-vendors">0</div>
          <div class="text-gray-300 text-sm font-medium">Activos</div>
        </div>
        <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-4 text-center hover:bg-white/15 transition-all duration-300 group">
          <div class="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent" id="total-products">0</div>
          <div class="text-gray-300 text-sm font-medium">Productos</div>
        </div>
      </div>

      <!-- Lista de vendedores -->
      <div class="space-y-4" id="vendors-list">
        <!-- Los vendedores se cargar√°n aqu√≠ din√°micamente -->
        <div class="text-center py-12">
          <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-8 max-w-md mx-auto">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400 mx-auto mb-4"></div>
            <p class="text-white font-medium">Cargando vendedores...</p>
            <p class="text-gray-400 text-sm mt-2">Buscando los mejores locales en {config.name}</p>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script define:vars={{ categoria, config }}>
    // Cargar vendedores y productos de la categor√≠a
    async function loadCategoryData() {
      try {
        console.log(`üîç Cargando datos para categor√≠a: ${categoria}`);
        
        const response = await fetch(`/api/categoria-simple-fixed?categoria=${categoria}`);
        const data = await response.json();

        if (!data.success) {
          console.error('Error en API:', data.error);
          showError('Error cargando datos de la categor√≠a');
          return;
        }

        console.log(`üì¶ Datos de ${categoria}:`, data);

        // Actualizar estad√≠sticas
        document.getElementById('total-vendors').textContent = data.stats.totalVendors.toString();
        document.getElementById('active-vendors').textContent = data.stats.activeVendors.toString();
        document.getElementById('total-products').textContent = data.stats.totalProducts.toString();


        // Mostrar mensaje de la API si no hay productos
        if (!data.stats.hasProducts) {
          showNoProductsMessage(data.message);
          return;
        }

        // Renderizar vendedores
        renderVendors(data.vendors);
        
        // Inicializar sliders despu√©s de renderizar
        setTimeout(() => {
          initializeSliders();
        }, 100);

      } catch (error) {
        console.error('Error cargando datos:', error);
        showError('Error de conexi√≥n. Intenta recargar la p√°gina.');
      }
    }

    function showError(message) {
      const container = document.getElementById('vendors-list');
      container.innerHTML = `
        <div class="text-center py-12">
          <div class="text-6xl mb-4">‚ö†Ô∏è</div>
          <h3 class="text-xl font-semibold text-white mb-2">Error</h3>
          <p class="text-gray-400 mb-4">${message}</p>
          <button 
            onclick="loadCategoryData()" 
            class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors"
          >
            Reintentar
          </button>
        </div>
      `;
    }

    function showNoProductsMessage(message) {
      const container = document.getElementById('vendors-list');
      container.innerHTML = `
        <div class="text-center py-12">
          <div class="text-6xl mb-4">${config.icon}</div>
          <h3 class="text-xl font-semibold text-white mb-2">No hay productos disponibles</h3>
          <p class="text-gray-400 mb-4">${message}</p>
          <p class="text-gray-500 text-sm mb-6">Solo mostramos productos de vendedores activos con stock disponible.</p>
          <div class="flex flex-col sm:flex-row gap-3 justify-center">
            <button 
              onclick="window.location.href='/'" 
              class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg transition-colors"
            >
              Volver al inicio
            </button>
            <button 
              onclick="loadCategoryData()" 
              class="bg-gray-700 hover:bg-gray-600 text-white px-6 py-2 rounded-lg transition-colors"
            >
              Actualizar
            </button>
          </div>
        </div>
      `;
    }

    function renderVendors(vendors) {
      const container = document.getElementById('vendors-list');
      
      if (!vendors || vendors.length === 0) {
        container.innerHTML = `
          <div class="text-center py-12">
            <div class="text-6xl mb-4">${config.icon}</div>
            <h3 class="text-xl font-semibold text-white mb-2">No hay productos disponibles</h3>
            <p class="text-gray-400 mb-4">No hay productos disponibles en la categor√≠a "${config.name}" en este momento.</p>
            <p class="text-gray-500 text-sm">Solo mostramos productos de vendedores activos con stock disponible.</p>
            <button 
              onclick="window.location.href='/'" 
              class="mt-4 bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg transition-colors"
            >
              Volver al inicio
            </button>
          </div>
        `;
        return;
      }

      // Renderizar vendedores con preview elegante
      container.innerHTML = `
        <div class="space-y-6">
          ${vendors.map(vendor => `
            <!-- Vendedor Card -->
            <div class="bg-white/5 backdrop-blur-md border border-white/10 rounded-2xl p-6 hover:bg-white/10 hover:border-white/20 transition-all duration-300 group">
              <div class="flex items-start gap-4">
                <!-- Avatar del vendedor -->
                <div class="w-20 h-20 bg-gradient-to-br from-blue-500/20 to-purple-500/20 rounded-2xl flex items-center justify-center flex-shrink-0 group-hover:scale-105 transition-transform duration-300">
                  <span class="text-3xl">${config.icon}</span>
                </div>
                
                <!-- Informaci√≥n del vendedor -->
                <div class="flex-1 min-w-0">
                  <div class="flex items-center gap-3 mb-3">
                    <h3 class="text-xl font-bold text-white truncate">${vendor.name}</h3>
                    <div class="flex items-center gap-2">
                      <div class="w-2 h-2 rounded-full ${vendor.isActive ? 'bg-green-400' : 'bg-gray-400'}"></div>
                      <span class="text-xs font-medium ${vendor.isActive ? 'text-green-400' : 'text-gray-400'}">
                        ${vendor.isActive ? 'Activo' : 'Inactivo'}
                      </span>
                    </div>
                  </div>
                  
                  <p class="text-gray-300 text-sm mb-4">
                    ${vendor.products.length} productos disponibles
                  </p>
                  
                  <!-- Preview de productos -->
                  <div class="relative">
                    ${vendor.products.length <= 4 ? `
                      <!-- Grid simple para 4 productos o menos -->
                      <div class="grid grid-cols-4 gap-3 mb-4">
                        ${vendor.products.map(product => `
                          <div class="bg-white/5 rounded-xl p-3 hover:bg-white/10 transition-all duration-200 cursor-pointer group/product" onclick="viewProduct('${product.id}')">
                            <div class="aspect-square bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-lg mb-2 overflow-hidden">
                              <img 
                                src="${product.image_url || '/images/placeholder-product.jpg'}" 
                                alt="${product.title}"
                                class="w-full h-full object-cover group-hover/product:scale-105 transition-transform duration-200"
                                onerror="this.src='/images/placeholder-product.jpg'"
                              />
                            </div>
                            <h4 class="text-white font-semibold text-sm mb-2 line-clamp-2 leading-tight">${product.title}</h4>
                            <div class="flex items-center justify-between">
                              <p class="text-blue-400 font-bold text-sm">$${(product.price_cents / 100).toFixed(0)}</p>
                              <span class="text-green-400 text-xs">${product.stock}</span>
                            </div>
                          </div>
                        `).join('')}
                      </div>
                    ` : `
                      <!-- Slider horizontal para m√°s de 4 productos -->
                      <div class="relative">
                        <div class="flex gap-3 overflow-x-auto scrollbar-hide pb-2" id="products-slider-${vendor.id}">
                          ${vendor.products.map(product => `
                            <div class="bg-white/5 rounded-xl p-3 hover:bg-white/10 transition-all duration-200 cursor-pointer group/product flex-shrink-0 w-40" onclick="viewProduct('${product.id}')">
                              <div class="aspect-square bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-lg mb-2 overflow-hidden">
                                <img 
                                  src="${product.image_url || '/images/placeholder-product.jpg'}" 
                                  alt="${product.title}"
                                  class="w-full h-full object-cover group-hover/product:scale-105 transition-transform duration-200"
                                  onerror="this.src='/images/placeholder-product.jpg'"
                                />
                              </div>
                              <h4 class="text-white font-semibold text-sm mb-2 line-clamp-2 leading-tight">${product.title}</h4>
                              <div class="flex items-center justify-between">
                                <p class="text-blue-400 font-bold text-sm">$${(product.price_cents / 100).toFixed(0)}</p>
                                <span class="text-green-400 text-xs">${product.stock}</span>
                              </div>
                            </div>
                          `).join('')}
                        </div>
                        
                        <!-- Botones discretos del slider -->
                        <div class="absolute -left-2 top-1/2 -translate-y-1/2">
                          <button 
                            class="w-6 h-6 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center transition-all duration-200 slider-prev-${vendor.id}"
                            onclick="scrollSlider('${vendor.id}', -1)"
                          >
                            <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                          </button>
                        </div>
                        <div class="absolute -right-2 top-1/2 -translate-y-1/2">
                          <button 
                            class="w-6 h-6 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center transition-all duration-200 slider-next-${vendor.id}"
                            onclick="scrollSlider('${vendor.id}', 1)"
                          >
                            <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                          </button>
                        </div>
                      </div>
                    `}
                    
                    <!-- Enlace discreto para ver todos (solo si hay m√°s de 4 productos) -->
                    ${vendor.products.length > 4 ? `
                      <div class="mt-3 text-center">
                        <button 
                          class="text-gray-400 hover:text-white text-xs transition-colors"
                          onclick="viewAllProducts('${vendor.id}')"
                        >
                          Ver todos los productos (${vendor.products.length})
                        </button>
                      </div>
                    ` : ''}
                  </div>
                </div>
                
                <!-- Botones de acci√≥n -->
                <div class="flex flex-col gap-3">
                  <button 
                    class="bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white px-4 py-2 rounded-xl transition-all duration-200 text-sm font-semibold hover:shadow-lg hover:shadow-blue-500/25 transform hover:scale-[1.02]"
                    onclick="contactVendor('${vendor.id}', '${vendor.phone}')"
                  >
                    Contactar
                  </button>
                  <button 
                    class="bg-white/10 hover:bg-white/20 border border-white/20 text-white px-4 py-2 rounded-xl transition-all duration-200 text-sm font-medium"
                    onclick="viewVendor('${vendor.id}')"
                  >
                    Ver Perfil
                  </button>
                </div>
              </div>
            </div>
          `).join('')}
          
          <!-- Secci√≥n de productos disponibles -->
          <div class="mt-8">
            <div class="flex items-center gap-3 mb-6">
              <h2 class="text-2xl font-bold text-white">Productos Disponibles</h2>
              <div class="flex-1 h-px bg-gradient-to-r from-white/20 to-transparent"></div>
            </div>
            
            <!-- Grid de productos de todos los vendedores -->
            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4">
              ${vendors.flatMap(vendor => vendor.products).map(product => `
                <div class="bg-white/10 backdrop-blur-md border border-white/20 rounded-2xl p-4 hover:bg-white/15 hover:border-white/30 hover:shadow-xl hover:shadow-blue-500/10 transition-all duration-300 relative group overflow-hidden before:absolute before:inset-0 before:bg-gradient-to-br before:from-white/5 before:to-transparent before:opacity-0 hover:before:opacity-100 before:transition-opacity before:duration-300 cursor-pointer" onclick="viewProduct('${product.id}')">
                  <!-- Badge de vendedor -->
                  <div class="absolute top-3 left-3 text-white text-xs px-3 py-1.5 rounded-full flex items-center gap-1.5 backdrop-blur-sm bg-gray-500/20 border border-gray-400/30">
                    <span class="w-1.5 h-1.5 rounded-full bg-gray-400"></span>
                    ${product.seller_name}
                  </div>

                  <!-- Imagen del producto -->
                  <div class="aspect-square bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-xl mb-4 overflow-hidden relative group-hover:scale-105 transition-transform duration-300">
                    <img
                      src="${product.image_url || '/images/placeholder-product.jpg'}"
                      alt="${product.title}"
                      class="w-full h-full object-cover group-hover:brightness-110 transition-all duration-300"
                      loading="lazy"
                      onerror="this.src='/images/placeholder-product.jpg'"
                    />
                    <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  </div>

                  <!-- Informaci√≥n del producto -->
                  <div class="space-y-3">
                    <h3 class="font-semibold text-white text-sm line-clamp-2 leading-relaxed">
                      ${product.title}
                    </h3>
                    
                    <div class="flex items-center justify-between">
                      <p class="text-xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">
                        $${(product.price_cents / 100).toFixed(0)}
                      </p>
                      <div class="w-2 h-2 rounded-full bg-gradient-to-r from-blue-400 to-cyan-400 opacity-60"></div>
                    </div>
                  </div>
                </div>
              `).join('')}
            </div>
          </div>
        </div>
      `;
    }

    // Funciones de interacci√≥n
    window.viewProduct = function(productId) {
      console.log('Ver producto:', productId);
      // window.location.href = `/producto/${productId}`;
    };

    window.viewAllProducts = function(sellerId) {
      console.log('Ver todos los productos de:', sellerId);
      window.location.href = `/vendedor/${sellerId}`;
    };

    window.contactVendor = function(sellerId, phone) {
      if (phone) {
        window.open(`https://wa.me/${phone.replace(/\D/g, '')}`, '_blank');
      } else {
        alert('N√∫mero de tel√©fono no disponible');
      }
    };

    window.viewVendor = function(sellerId) {
      window.location.href = `/vendedor/${sellerId}`;
    };

    // Funci√≥n para el slider de productos
    window.scrollSlider = function(vendorId, direction) {
      const slider = document.getElementById(`products-slider-${vendorId}`);
      if (!slider) return;
      
      const scrollAmount = 172; // 40 (w-40) + 12 (gap) = 52 * 3 = 156px aproximadamente
      const currentScroll = slider.scrollLeft;
      const targetScroll = currentScroll + (direction * scrollAmount);
      
      slider.scrollTo({
        left: targetScroll,
        behavior: 'smooth'
      });
      
      // Actualizar visibilidad de botones
      setTimeout(() => {
        updateSliderButtons(vendorId);
      }, 300);
    };

    // Actualizar visibilidad de botones del slider
    function updateSliderButtons(vendorId) {
      const slider = document.getElementById(`products-slider-${vendorId}`);
      if (!slider) return;
      
      const prevBtn = document.querySelector(`.slider-prev-${vendorId}`);
      const nextBtn = document.querySelector(`.slider-next-${vendorId}`);
      
      if (prevBtn && nextBtn) {
        const isAtStart = slider.scrollLeft <= 0;
        const isAtEnd = slider.scrollLeft >= slider.scrollWidth - slider.clientWidth;
        
        prevBtn.style.opacity = isAtStart ? '0.5' : '1';
        nextBtn.style.opacity = isAtEnd ? '0.5' : '1';
        
        prevBtn.disabled = isAtStart;
        nextBtn.disabled = isAtEnd;
      }
    }

    // Inicializar todos los sliders
    function initializeSliders() {
      const sliders = document.querySelectorAll('[id^="products-slider-"]');
      sliders.forEach(slider => {
        const vendorId = slider.id.replace('products-slider-', '');
        updateSliderButtons(vendorId);
        
        // Agregar listener para scroll manual
        slider.addEventListener('scroll', () => {
          updateSliderButtons(vendorId);
        });
      });
    }

    // Exponer funciones globalmente para onclick
    window.loadCategoryData = loadCategoryData;
    window.showError = showError;
    window.showNoProductsMessage = showNoProductsMessage;

    // Cargar datos al montar la p√°gina
    document.addEventListener('DOMContentLoaded', loadCategoryData);
  </script>
</BaseLayout>
