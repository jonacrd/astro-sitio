---
// P√°gina para probar el token permanente
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Probar Token Permanente</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #25D366;
            text-align: center;
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }
        button {
            background: #25D366;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            margin-top: 20px;
        }
        button:hover {
            background: #128C7E;
        }
        .result {
            margin-top: 20px;
            padding: 15px;
            border-radius: 5px;
            background: #f8f9fa;
            border-left: 4px solid #25D366;
            white-space: pre-wrap;
            font-family: monospace;
        }
        .error {
            background: #f8d7da;
            border-left-color: #dc3545;
        }
        .success {
            background: #d4edda;
            border-left-color: #28a745;
        }
        .info {
            background: #d1ecf1;
            border-left-color: #17a2b8;
        }
        .warning {
            background: #fff3cd;
            border-left-color: #ffc107;
        }
        .section {
            background: #e9ecef;
            padding: 15px;
            border-radius: 5px;
            margin: 15px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üß™ Probar Token Permanente</h1>
        
        <div class="info">
            <strong>üìã INFORMACI√ìN:</strong>
            <br>Token: EAA1Dzgz00SIBPrZCcsXmdnlzR2df9qqGSpZBUPO4kLCvZA6857w6zm7HoagzQe0zdh6QR5ZAbq8HqpAHsTHyFOayYUF2IhROTReW8FPMuN8ZC2EO7NgZC9ixddoLNHPB3x5XVhUrWSmRZAXq2MU1lBSSBbv4NpIgDjCzWNH7ZCZBRM6gO4zJJEf05QYKh2Niw8AZDZD
            <br>Phone ID: 741455765727385
            <br>Variables en Vercel: ‚úÖ Configuradas
        </div>
        
        <div class="form-group">
            <label for="phone">Tel√©fono de prueba:</label>
            <input type="text" id="phone" placeholder="+56962614851" value="+56962614851">
        </div>
        
        <button id="testButton">üöÄ Probar Token Permanente</button>
        
        <div id="result"></div>
    </div>

    <script>
        async function testPermanentToken() {
            const phone = document.getElementById('phone').value;
            const resultDiv = document.getElementById('result');
            
            resultDiv.innerHTML = '<div class="result">üîÑ Probando token permanente...</div>';
            
            try {
                const response = await fetch('/api/test-permanent-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ phone })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    let html = '<div class="result success">‚úÖ Token permanente probado</div>';
                    html += `<div class="result info">üì± Tel√©fono de prueba: ${data.testPhone}</div>`;
                    html += `<div class="result info">üîë Token: ${data.token}</div>`;
                    html += `<div class="result info">üìû Phone ID: ${data.phoneId}</div>`;
                    html += `<div class="result success">üìä Plantillas exitosas: ${data.successfulTemplates.join(', ')}</div>`;
                    html += `<div class="result error">‚ùå Plantillas fallidas: ${data.failedTemplates.join(', ')}</div>`;
                    
                    html += '<div class="result">üìÑ Resultados detallados:</div>';
                    for (const [template, result] of Object.entries(data.results)) {
                        const status = result.success ? '‚úÖ' : '‚ùå';
                        const className = result.success ? 'success' : 'error';
                        html += `<div class="result ${className}">${status} ${template}: ${result.success ? 'Enviado' : result.error}</div>`;
                    }
                    
                    resultDiv.innerHTML = html;
                } else {
                    resultDiv.innerHTML = `<div class="result error">‚ùå Error: ${data.error}</div>`;
                }
            } catch (error) {
                resultDiv.innerHTML = `<div class="result error">‚ùå Error de red: ${error.message}</div>`;
            }
        }

        // Agregar event listener cuando el DOM est√© listo
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('testButton').addEventListener('click', testPermanentToken);
        });
    </script>
</body>
</html>

