---
import BaseLayout from '../layouts/BaseLayout.astro'
import SearchBarEnhanced from '../components/react/SearchBarEnhanced.tsx'
import QuickActions from '../components/react/QuickActions.tsx'
import RealGridBlocks from '../components/react/RealGridBlocks.tsx'
import RealProductFeed from '../components/react/RealProductFeed.tsx'
import QuestionModal from '../components/react/QuestionModal.tsx'
import SaleModal from '../components/react/SaleModal.tsx'
---

<BaseLayout 
  title="Town - Feed Social de Compras"
  description="Descubre productos locales en un feed tipo red social - Town"
>
  <link rel="stylesheet" href="/src/styles/feed-animations.css" />
  <div class="min-h-screen bg-dark-primary">



    <!-- Banner Promocional -->
    <section class="px-4 py-6">
      <div class="max-w-7xl mx-auto">
        <div class="relative aspect-[16/9] rounded-2xl overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-accent/20 to-accent/10 flex items-center justify-center">
            <div class="text-center text-white">
              <h2 class="text-3xl font-bold mb-2">¬°ENV√çO GRATIS</h2>
              <p class="text-lg opacity-90">En compras superiores a $10.000</p>
            </div>
          </div>
          <!-- Imagen de fondo opcional -->
          <div class="absolute inset-0 bg-gradient-to-br from-primary via-muted to-surface opacity-50"></div>
        </div>
      </div>
    </section>

    <!-- Search Bar Mejorado -->
    <section class="px-4 pb-6">
      <div class="max-w-7xl mx-auto">
        <SearchBarEnhanced 
          client:load 
          onAddToCart={(productId, sellerId) => {
            console.log('üõí A√±adir al carrito:', productId, sellerId);
            // TODO: Implementar a√±adir al carrito
          }}
          onViewProduct={(productId) => {
            console.log('üëÅÔ∏è Ver producto:', productId);
            // TODO: Implementar ver producto
          }}
          onViewSeller={(sellerId) => {
            console.log('üè™ Ver vendedor:', sellerId);
            // TODO: Implementar ver vendedor
          }}
          placeholder="¬øQu√© necesitas? Ej: cerveza, hamburguesa, corte de cabello..."
        />
      </div>
    </section>

    <!-- Acciones R√°pidas -->
    <QuickActions 
      client:load 
      onAskQuestion={() => {
        document.getElementById('question-modal')?.click();
      }}
      onPublishSale={() => {
        document.getElementById('sale-modal')?.click();
      }}
    />

        <!-- Grid Din√°mico de 4 Bloques - DATOS REALES -->
        <RealGridBlocks 
          client:load 
          onAddToCart={(productId) => {
            console.log('Add to cart:', productId);
            // TODO: Implementar a√±adir al carrito
          }}
          onViewProduct={(productId) => {
            console.log('View product:', productId);
            // TODO: Implementar ver producto
          }}
          onContactService={(serviceId) => {
            console.log('Contact service:', serviceId);
            // TODO: Implementar contacto con servicio
          }}
        />

    <!-- Feed Principal - DATOS REALES -->
    <main class="pb-20">
      <RealProductFeed 
        client:load 
        className=""
      />
    </main>

    <!-- Modales -->
    <QuestionModal 
      client:load 
      isOpen={false}
      onClose={() => {}}
      onSubmit={(question) => {
        console.log('Question submitted:', question);
        // TODO: Implementar env√≠o de pregunta
      }}
    />

    <SaleModal 
      client:load 
      isOpen={false}
      onClose={() => {}}
      onSubmit={(sale) => {
        console.log('Sale submitted:', sale);
        // TODO: Implementar env√≠o de venta
      }}
    />

  </div>
</BaseLayout>

<script>
  // L√≥gica para abrir modales y manejar carrito
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Feed Social de Compras cargado');
    
    // Inicializar carrito vac√≠o si no existe
    if (!localStorage.getItem('cart')) {
      localStorage.setItem('cart', '[]');
    }
    
    // Escuchar eventos de actualizaci√≥n del carrito
    window.addEventListener('cart-updated', (event) => {
      console.log('üõí Carrito actualizado:', event.detail);
      
      // Actualizar contador en el header
      const cart = JSON.parse(localStorage.getItem('cart') || '[]');
      const totalItems = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);
      
      // Buscar y actualizar contador en el header
      const cartCountElements = document.querySelectorAll('[data-cart-count], .cart-count, .cart-badge');
      cartCountElements.forEach(element => {
        element.textContent = totalItems.toString();
        element.style.display = totalItems > 0 ? 'block' : 'none';
      });
      
      console.log(`üìä Carrito actual: ${totalItems} items total`);
      console.log('üõí Items en carrito:', cart);
    });
  });
</script>
