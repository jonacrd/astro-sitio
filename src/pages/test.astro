---
// P√°gina simple para diagnosticar problemas
---

<html>
<head>
  <title>Diagn√≥stico - Town</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
    .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
    .success { color: green; }
    .error { color: red; }
    .info { color: blue; }
    pre { background: #f8f8f8; padding: 15px; border-radius: 4px; overflow-x: auto; }
    .test-btn { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; margin: 10px 5px; }
    .test-btn:hover { background: #0056b3; }
  </style>
</head>
<body>
  <div class="container">
    <h1>üîç Diagn√≥stico de Town</h1>
    
    <h2>Tests B√°sicos</h2>
    <button class="test-btn" onclick="testBasic()">Test B√°sico</button>
    <button class="test-btn" onclick="testAuth()">Test Auth</button>
    <button class="test-btn" onclick="testDatabase()">Test Base de Datos</button>
    
    <div id="results"></div>
    
    <h2>Informaci√≥n del Entorno</h2>
    <pre id="envInfo">Cargando...</pre>
  </div>

  <script>
    async function testBasic() {
      const results = document.getElementById('results');
      results.innerHTML = '<p class="info">Probando conexi√≥n b√°sica...</p>';
      
      try {
        const response = await fetch('/api/debug');
        const data = await response.json();
        
        results.innerHTML = `
          <h3>‚úÖ Test B√°sico - EXITOSO</h3>
          <pre>${JSON.stringify(data, null, 2)}</pre>
        `;
        
        // Actualizar informaci√≥n del entorno
        document.getElementById('envInfo').textContent = JSON.stringify(data, null, 2);
      } catch (error) {
        results.innerHTML = `
          <h3>‚ùå Test B√°sico - ERROR</h3>
          <p class="error">${error.message}</p>
        `;
      }
    }

    async function testAuth() {
      const results = document.getElementById('results');
      results.innerHTML = '<p class="info">Probando autenticaci√≥n con Supabase...</p>';
      
      try {
        const { supabase } = await import('../lib/supabase-browser');
        
        const { data: { user }, error } = await supabase.auth.getUser();
        
        if (error) {
          results.innerHTML = `
            <h3>‚ùå Test Auth - ERROR</h3>
            <p class="error">${error.message}</p>
          `;
        } else {
          results.innerHTML = `
            <h3>‚úÖ Test Auth - EXITOSO</h3>
            <pre>${JSON.stringify({ user: user ? { id: user.id, email: user.email } : null }, null, 2)}</pre>
          `;
        }
      } catch (error) {
        results.innerHTML = `
          <h3>‚ùå Test Auth - ERROR</h3>
          <p class="error">${error.message}</p>
        `;
      }
    }

    async function testDatabase() {
      const results = document.getElementById('results');
      results.innerHTML = '<p class="info">Probando registro con Supabase...</p>';
      
      try {
        const { supabase } = await import('../lib/supabase-browser');
        
        // Test con registro simple
        const testEmail = 'test@example.com';
        const testPassword = 'test123456';
        
        const { data, error } = await supabase.auth.signUp({
          email: testEmail,
          password: testPassword,
          options: {
            emailRedirectTo: window.location.origin
          }
        });
        
        if (error) {
          results.innerHTML = `
            <h3>‚ùå Test Base de Datos - ERROR</h3>
            <p class="error">${error.message}</p>
          `;
        } else {
          results.innerHTML = `
            <h3>‚úÖ Test Base de Datos - EXITOSO</h3>
            <pre>${JSON.stringify({ 
              user: data.user ? { id: data.user.id, email: data.user.email } : null,
              session: data.session ? 'Session created' : 'No session'
            }, null, 2)}</pre>
          `;
        }
      } catch (error) {
        results.innerHTML = `
          <h3>‚ùå Test Base de Datos - ERROR</h3>
          <p class="error">${error.message}</p>
        `;
      }
    }

    // Hacer las funciones globales para que funcionen con onclick
    window.testBasic = testBasic;
    window.testAuth = testAuth;
    window.testDatabase = testDatabase;

    // Cargar informaci√≥n del entorno al cargar la p√°gina
    window.addEventListener('load', testBasic);
  </script>
</body>
</html>
