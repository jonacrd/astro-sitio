---
import BaseLayout from '../../layouts/BaseLayout.astro';
---

<BaseLayout title="Town Repartidor">
  <main class="min-h-screen bg-gray-900 flex items-center justify-center px-4">
    <div class="max-w-md w-full">
      <!-- Logo y tÃ­tulo -->
      <div class="text-center mb-8">
        <div class="w-20 h-20 bg-orange-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-white mb-2">ðŸšš Town Repartidor</h1>
        <p class="text-gray-400">Inicia sesiÃ³n para comenzar a recibir ofertas</p>
      </div>

      <!-- Formulario de login -->
      <form class="space-y-6" id="delivery-login-form">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-300 mb-2">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            placeholder="test@test.com"
            value="test@test.com"
          />
        </div>
        
        <div>
          <label for="phone" class="block text-sm font-medium text-gray-300 mb-2">TelÃ©fono</label>
          <input
            type="tel"
            id="phone"
            name="phone"
            required
            class="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent"
            placeholder="+56962614851"
            value="+56962614851"
          />
        </div>

        <button
          type="submit"
          class="w-full bg-orange-600 text-white py-3 px-4 rounded-lg hover:bg-orange-700 transition-colors font-medium"
        >
          ðŸš€ Iniciar SesiÃ³n
        </button>
      </form>

      <!-- Demo info -->
      <div class="mt-6 p-4 bg-gray-800 rounded-lg">
        <p class="text-sm text-gray-400 text-center">
          <strong>Demo:</strong> Usa test@test.com y +56962614851 para probar
        </p>
      </div>
    </div>
  </main>
</BaseLayout>

<script>
  import { supabase } from '../../lib/supabase-browser';

  document.getElementById('delivery-login-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const email = formData.get('email');
    const phone = formData.get('phone');
    
    if (!email || !phone) {
      alert('Por favor completa todos los campos');
      return;
    }

    try {
      // Intentar iniciar sesiÃ³n con el email
      const { data, error } = await supabase.auth.signInWithPassword({
        email: email,
        password: 'delivery123' // Password por defecto para delivery
      });

      if (error) {
        console.log('Usuario no existe, creando...');
        
        // Si no existe, crear el usuario
        const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
          email: email,
          password: 'delivery123'
        });

        if (signUpError) {
          throw signUpError;
        }

        // Crear perfil de courier
        if (signUpData.user) {
          const { error: profileError } = await supabase
            .from('couriers')
            .insert({
              user_id: signUpData.user.id,
              name: email.split('@')[0],
              phone: phone,
              status: 'active'
            });

          if (profileError) {
            console.error('Error creando perfil courier:', profileError);
            // Continuar de todas formas
          } else {
            console.log('âœ… Perfil courier creado exitosamente');
          }
        }
      } else {
        console.log('âœ… Usuario existente, iniciando sesiÃ³n...');
        
        // Verificar que existe el perfil courier
        const { data: courier, error: courierError } = await supabase
          .from('couriers')
          .select('*')
          .eq('user_id', data.user.id)
          .single();

        if (courierError || !courier) {
          console.log('Creando perfil courier faltante...');
          
          // Crear perfil si no existe
          const { error: profileError } = await supabase
            .from('couriers')
            .insert({
              user_id: data.user.id,
              name: email.split('@')[0],
              phone: phone,
              status: 'active'
            });

          if (profileError) {
            console.error('Error creando perfil courier:', profileError);
          }
        }
      }

      // Redirigir al dashboard
      window.location.href = '/delivery-dashboard';
      
    } catch (error) {
      console.error('Error en login:', error);
      alert('Error iniciando sesiÃ³n: ' + error.message);
    }
  });
</script>
