---
import BaseLayout from '../layouts/BaseLayout.astro'
---

<BaseLayout title="Dashboard Vendedor">
  <div class="min-h-screen bg-gray-900 py-6">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-8">
        <div class="flex items-center gap-3 mb-2">
          <div class="w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-gray-900" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
            </svg>
          </div>
          <h1 class="text-3xl font-bold text-white">Dashboard Vendedor</h1>
        </div>
        <p class="text-gray-400">Resumen de tu negocio y gestión de productos</p>
      </div>

      <!-- Estadísticas Principales -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Ventas Hoy -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-400">Ventas Hoy</p>
              <p class="text-2xl font-bold text-white" id="today-sales">$0</p>
            </div>
            <div class="w-12 h-12 bg-green-600 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4zM18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z"/>
              </svg>
            </div>
          </div>
        </div>

        <!-- Pedidos Pendientes -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-400">Pedidos Pendientes</p>
              <p class="text-2xl font-bold text-yellow-500" id="pending-orders">0</p>
            </div>
            <div class="w-12 h-12 bg-yellow-600 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clipRule="evenodd"/>
              </svg>
            </div>
          </div>
        </div>

        <!-- Stock Bajo -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-400">Stock Bajo</p>
              <p class="text-2xl font-bold text-red-500" id="low-stock">0</p>
            </div>
            <div class="w-12 h-12 bg-red-600 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd"/>
              </svg>
            </div>
          </div>
        </div>

        <!-- Total Productos -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm text-gray-400">Total Productos</p>
              <p class="text-2xl font-bold text-blue-500" id="total-products">0</p>
            </div>
            <div class="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
              <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 2L3 7v11a1 1 0 001 1h12a1 1 0 001-1V7l-7-5zM8 15a1 1 0 100-2 1 1 0 000 2zm4 0a1 1 0 100-2 1 1 0 000 2z" clipRule="evenodd"/>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Contenido Principal -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Mi Inventario por Categoría -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-white">Mi Inventario</h2>
            <a href="/dashboard/mis-productos" class="text-yellow-500 hover:text-yellow-400 text-sm font-medium">
              Ver todos →
            </a>
          </div>
          <div id="inventory-categories" class="space-y-3">
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">📦</span>
                </div>
                <span class="text-white font-medium">Cargando...</span>
              </div>
              <span class="text-gray-400 text-sm">0 productos</span>
            </div>
          </div>
        </div>

        <!-- Pedidos Recientes -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-white">Pedidos Recientes</h2>
            <a href="/dashboard/pedidos" class="text-yellow-500 hover:text-yellow-400 text-sm font-medium">
              Ver todos →
            </a>
          </div>
          <div id="recent-orders" class="space-y-3">
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-yellow-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">📋</span>
                </div>
                <div>
                  <span class="text-white font-medium">Cargando...</span>
                  <p class="text-gray-400 text-sm">Estado: —</p>
                </div>
              </div>
              <span class="text-gray-400 text-sm">$0</span>
            </div>
          </div>
        </div>

        <!-- Ventas de la Semana -->
        <div class="bg-gray-800 rounded-lg p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-white">Ventas de la Semana</h2>
            <span class="text-yellow-500 text-2xl font-bold" id="week-sales">$0</span>
          </div>
          <div class="h-32 bg-gray-700 rounded-lg flex items-center justify-center">
            <div class="text-center">
              <div class="w-16 h-16 bg-yellow-600 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"/>
                </svg>
              </div>
              <p class="text-gray-400 text-sm">Gráfico de ventas</p>
            </div>
          </div>
        </div>

        <!-- Acciones Rápidas -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-xl font-semibold text-white mb-6">Acciones Rápidas</h2>
          <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
            <a href="/dashboard/mis-productos" class="bg-blue-600 hover:bg-blue-700 text-white p-4 rounded-lg text-center transition-colors">
              <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 2L3 7v11a1 1 0 001 1h12a1 1 0 001-1V7l-7-5zM8 15a1 1 0 100-2 1 1 0 000 2zm4 0a1 1 0 100-2 1 1 0 000 2z" clipRule="evenodd"/>
                </svg>
              </div>
              <p class="text-sm font-medium">Mis Productos</p>
            </a>
            <a href="/dashboard/pedidos" class="bg-yellow-600 hover:bg-yellow-700 text-white p-4 rounded-lg text-center transition-colors">
              <div class="w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 2L3 7v11a1 1 0 001 1h12a1 1 0 001-1V7l-7-5zM8 15a1 1 0 100-2 1 1 0 000 2zm4 0a1 1 0 100-2 1 1 0 000 2z" clipRule="evenodd"/>
                </svg>
              </div>
              <p class="text-sm font-medium">Pedidos</p>
            </a>
            <a href="/dashboard/recompensas" class="bg-green-600 hover:bg-green-700 text-white p-4 rounded-lg text-center transition-colors">
              <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              </div>
              <p class="text-sm font-medium">Recompensas</p>
            </a>
            <a href="/dashboard/perfil-publico" class="bg-purple-600 hover:bg-purple-700 text-white p-4 rounded-lg text-center transition-colors">
              <div class="w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd"/>
                </svg>
              </div>
              <p class="text-sm font-medium">Perfil Público</p>
            </a>
            <a href="/dashboard/mis-productos" class="bg-indigo-600 hover:bg-indigo-700 text-white p-4 rounded-lg text-center transition-colors">
              <div class="w-8 h-8 bg-indigo-500 rounded-lg flex items-center justify-center mx-auto mb-2">
                <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clipRule="evenodd"/>
                </svg>
              </div>
              <p class="text-sm font-medium">Agregar Producto</p>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // ===== CARGAR DATOS DEL DASHBOARD =====
    async function loadDashboardData() {
      try {
        // Obtener usuario autenticado
        const { data: { user } } = await supabase.auth.getUser();
        if (!user) {
          console.error('❌ No hay usuario autenticado');
          return;
        }

        // Cargar estadísticas principales
        await loadMainStats(user.id);
        
        // Cargar inventario por categoría
        await loadInventoryCategories(user.id);
        
        // Cargar pedidos recientes
        await loadRecentOrders(user.id);
        
        // Cargar ventas de la semana
        await loadWeekSales(user.id);

      } catch (error) {
        console.error('❌ Error cargando datos del dashboard:', error);
      }
    }

    // ===== ESTADÍSTICAS PRINCIPALES =====
    async function loadMainStats(sellerId) {
      try {
        // Ventas de hoy
        const today = new Date().toISOString().split('T')[0];
        const { data: todayOrders, error: todayError } = await supabase
          .from('orders')
          .select('total_cents, status')
          .eq('seller_id', sellerId)
          .gte('created_at', `${today}T00:00:00`)
          .in('status', ['completed', 'seller_confirmed']);

        if (!todayError && todayOrders) {
          const todaySales = todayOrders.reduce((sum, order) => sum + (order.total_cents || 0), 0);
          document.getElementById('today-sales').textContent = `$${(todaySales / 100).toFixed(0)}`;
        }

        // Pedidos pendientes
        const { data: pendingOrders, error: pendingError } = await supabase
          .from('orders')
          .select('id')
          .eq('seller_id', sellerId)
          .in('status', ['placed', 'seller_confirmed']);

        if (!pendingError && pendingOrders) {
          document.getElementById('pending-orders').textContent = pendingOrders.length.toString();
        }

        // Stock bajo
        const { data: lowStockProducts, error: lowStockError } = await supabase
          .from('seller_products')
          .select('id, stock')
          .eq('seller_id', sellerId)
          .lt('stock', 5);

        if (!lowStockError && lowStockProducts) {
          document.getElementById('low-stock').textContent = lowStockProducts.length.toString();
        }

        // Total productos
        const { data: totalProducts, error: totalError } = await supabase
          .from('seller_products')
          .select('id')
          .eq('seller_id', sellerId);

        if (!totalError && totalProducts) {
          document.getElementById('total-products').textContent = totalProducts.length.toString();
        }

      } catch (error) {
        console.error('❌ Error cargando estadísticas principales:', error);
      }
    }

    // ===== INVENTARIO POR CATEGORÍA =====
    async function loadInventoryCategories(sellerId) {
      try {
        const { data: sellerProducts, error } = await supabase
          .from('seller_products')
          .select(`
            stock,
            products (title, category)
          `)
          .eq('seller_id', sellerId);

        if (error) {
          console.error('❌ Error cargando inventario:', error);
          return;
        }

        // Agrupar por categoría
        const categories = {};
        (sellerProducts || []).forEach(sp => {
          if (sp.products?.category) {
            if (!categories[sp.products.category]) {
              categories[sp.products.category] = 0;
            }
            categories[sp.products.category]++;
          }
        });

        // Renderizar categorías
        const container = document.getElementById('inventory-categories');
        if (Object.keys(categories).length === 0) {
          container.innerHTML = `
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-gray-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">📦</span>
                </div>
                <span class="text-white font-medium">Sin productos</span>
              </div>
              <span class="text-gray-400 text-sm">0 productos</span>
            </div>
          `;
        } else {
          const categoryLabels = {
            supermercado: 'Abarrotes',
            postres: 'Panadería',
            comida: 'Comida preparada',
            bebidas: 'Bebidas',
            belleza: 'Belleza',
            servicios: 'Servicios'
          };

          const categoryIcons = {
            supermercado: '🛒',
            postres: '🍰',
            comida: '🍕',
            bebidas: '🥤',
            belleza: '💄',
            servicios: '🔧'
          };

          container.innerHTML = Object.entries(categories).map(([category, count]) => `
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">${categoryIcons[category] || '📦'}</span>
                </div>
                <span class="text-white font-medium">${categoryLabels[category] || category}</span>
              </div>
              <span class="text-gray-400 text-sm">${count} productos</span>
            </div>
          `).join('');
        }

      } catch (error) {
        console.error('❌ Error cargando inventario por categoría:', error);
      }
    }

    // ===== PEDIDOS RECIENTES =====
    async function loadRecentOrders(sellerId) {
      try {
        const { data: recentOrders, error } = await supabase
          .from('orders')
          .select('id, total_cents, status, created_at')
          .eq('seller_id', sellerId)
          .order('created_at', { ascending: false })
          .limit(3);

        if (error) {
          console.error('❌ Error cargando pedidos recientes:', error);
          return;
        }

        const container = document.getElementById('recent-orders');
        if (!recentOrders || recentOrders.length === 0) {
          container.innerHTML = `
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-gray-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">📋</span>
                </div>
                <div>
                  <span class="text-white font-medium">Sin pedidos</span>
                  <p class="text-gray-400 text-sm">Estado: —</p>
                </div>
              </div>
              <span class="text-gray-400 text-sm">$0</span>
            </div>
          `;
        } else {
          const statusLabels = {
            placed: 'Pendiente',
            seller_confirmed: 'Confirmado',
            completed: 'Completado',
            cancelled: 'Cancelado'
          };

          const statusColors = {
            placed: 'text-yellow-400',
            seller_confirmed: 'text-blue-400',
            completed: 'text-green-400',
            cancelled: 'text-red-400'
          };

          container.innerHTML = recentOrders.map(order => `
            <div class="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 bg-yellow-600 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">📋</span>
                </div>
                <div>
                  <span class="text-white font-medium">Pedido #${order.id.slice(-6)}</span>
                  <p class="text-gray-400 text-sm">Estado: <span class="${statusColors[order.status] || 'text-gray-400'}">${statusLabels[order.status] || order.status}</span></p>
                </div>
              </div>
              <span class="text-gray-400 text-sm">$${((order.total_cents || 0) / 100).toFixed(0)}</span>
            </div>
          `).join('');
        }

      } catch (error) {
        console.error('❌ Error cargando pedidos recientes:', error);
      }
    }

    // ===== VENTAS DE LA SEMANA =====
    async function loadWeekSales(sellerId) {
      try {
        const weekAgo = new Date();
        weekAgo.setDate(weekAgo.getDate() - 7);
        
        const { data: weekOrders, error } = await supabase
          .from('orders')
          .select('total_cents')
          .eq('seller_id', sellerId)
          .gte('created_at', weekAgo.toISOString())
          .in('status', ['completed', 'seller_confirmed']);

        if (!error && weekOrders) {
          const weekSales = weekOrders.reduce((sum, order) => sum + (order.total_cents || 0), 0);
          document.getElementById('week-sales').textContent = `$${(weekSales / 100).toFixed(0)}`;
        }

      } catch (error) {
        console.error('❌ Error cargando ventas de la semana:', error);
      }
    }

    // ===== INICIALIZAR DASHBOARD =====
    document.addEventListener('DOMContentLoaded', () => {
      loadDashboardData();
    });
  </script>
</BaseLayout>