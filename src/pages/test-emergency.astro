---
// P√°gina de prueba para el endpoint de emergencia
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Endpoint de Emergencia</title>
    <style>
        body { 
            background-color: #111827; 
            color: white; 
            min-height: 100vh; 
            font-family: system-ui, -apple-system, sans-serif;
            padding: 2rem;
        }
        .container { 
            max-width: 800px; 
            margin: 0 auto; 
        }
        h1 { 
            font-size: 1.875rem; 
            font-weight: bold; 
            margin-bottom: 2rem; 
            text-align: center; 
        }
        .result { 
            background-color: #1f2937; 
            padding: 1rem; 
            border-radius: 0.5rem; 
            margin: 1rem 0;
        }
        .success { 
            background-color: #065f46; 
            color: #10b981;
        }
        .error { 
            background-color: #7f1d1d; 
            color: #fca5a5;
        }
        button { 
            background-color: #2563eb; 
            color: white; 
            padding: 0.5rem 1rem; 
            border-radius: 0.5rem; 
            border: none; 
            cursor: pointer; 
            font-weight: 500;
            margin: 0.5rem;
        }
        button:hover { 
            background-color: #1d4ed8; 
        }
        pre { 
            background-color: #374151; 
            padding: 1rem; 
            border-radius: 0.25rem; 
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üß™ Test Endpoint de Emergencia</h1>
        
        <div>
            <button onclick="testEmergencyEndpoint()">Probar Endpoint de Emergencia</button>
            <button onclick="testProductNamesDebug()">Probar Debug de Nombres</button>
            <button onclick="clearResults()">Limpiar</button>
        </div>

        <div id="results"></div>
    </div>

    <script>
        function addResult(message, isError = false) {
            const results = document.getElementById('results');
            const div = document.createElement('div');
            div.className = `result ${isError ? 'error' : 'success'}`;
            div.innerHTML = `
                <strong>${isError ? '‚ùå Error:' : '‚úÖ Resultado:'}</strong><br>
                <pre>${JSON.stringify(message, null, 2)}</pre>
            `;
            results.appendChild(div);
        }

        async function testEmergencyEndpoint() {
            try {
                console.log('üß™ Probando endpoint de emergencia...');
                const response = await fetch('/api/debug/test-emergency-endpoint');
                const result = await response.json();
                
                if (result.success) {
                    addResult(result);
                } else {
                    addResult(result, true);
                }
            } catch (error) {
                console.error('‚ùå Error:', error);
                addResult({ error: error.message }, true);
            }
        }

        async function testProductNamesDebug() {
            try {
                console.log('üîç Probando debug de nombres de productos...');
                const response = await fetch('/api/debug/check-product-names');
                const result = await response.json();
                
                if (result.success) {
                    addResult(result);
                } else {
                    addResult(result, true);
                }
            } catch (error) {
                console.error('‚ùå Error:', error);
                addResult({ error: error.message }, true);
            }
        }

        function clearResults() {
            document.getElementById('results').innerHTML = '';
        }

        // Cargar autom√°ticamente al inicio
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üöÄ P√°gina de test cargada');
            testEmergencyEndpoint();
        });
    </script>
</body>
</html>
