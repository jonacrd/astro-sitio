---
import BaseLayout from '@/layouts/BaseLayout.astro'

// Obtener código de orden de la URL
const orderCode = Astro.url.searchParams.get('order')

// En modo mock, no tenemos órdenes reales, solo mostramos el código
let order = null
if (orderCode) {
  order = {
    orderCode,
    totalCents: 0,
    items: []
  }
}
---

<BaseLayout 
  title={order ? `Pedido ${order.orderCode} - Confirmación` : "Confirmación de pedido"}
  description="Tu pedido ha sido procesado exitosamente"
>
  <section class="py-12 sm:py-16">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      {order ? (
        <div class="text-center mb-8 sm:mb-12">
          <!-- Icono de éxito -->
          <div class="bg-green-100 w-20 h-20 sm:w-24 sm:h-24 rounded-full flex items-center justify-center mx-auto mb-4 sm:mb-6">
            <svg class="w-10 h-10 sm:w-12 sm:h-12 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
          </div>

          <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 mb-3 sm:mb-4">
            ¡Pedido confirmado!
          </h1>
          <p class="text-base sm:text-lg text-gray-600 mb-2">
            Tu pedido ha sido procesado exitosamente
          </p>
          <p class="text-xs sm:text-sm text-gray-500">
            Código de pedido: <span class="font-mono font-bold">{order.orderCode}</span>
          </p>
        </div>

        <!-- Detalles del pedido -->
        <div class="bg-white rounded-lg shadow-lg p-4 sm:p-6 lg:p-8 mb-6 sm:mb-8">
          <h2 class="text-lg sm:text-xl font-bold text-gray-900 mb-4 sm:mb-6">Detalles del pedido</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6 sm:gap-8 mb-6 sm:mb-8">
            <!-- Información del cliente -->
            <div>
              <h3 class="font-semibold text-gray-700 mb-3 text-sm sm:text-base">Información de contacto</h3>
              <div class="space-y-2 text-sm">
                {order.customerName && (
                  <p><span class="font-medium">Nombre:</span> {order.customerName}</p>
                )}
                {order.customerEmail && (
                  <p><span class="font-medium">Email:</span> {order.customerEmail}</p>
                )}
                <p><span class="font-medium">Fecha:</span> {new Date(order.createdAt).toLocaleDateString('es-ES')}</p>
              </div>
            </div>

            <!-- Resumen del pedido -->
            <div>
              <h3 class="font-semibold text-gray-700 mb-3">Resumen</h3>
              <div class="space-y-2 text-sm">
                <p><span class="font-medium">Productos:</span> {order.items.length}</p>
                <p><span class="font-medium">Total:</span> <span class="text-lg font-bold text-blue-600">${(order.totalCents / 100).toFixed(2)}</span></p>
              </div>
            </div>
          </div>

          <!-- Items del pedido -->
          <div>
            <h3 class="font-semibold text-gray-700 mb-3 sm:mb-4 text-sm sm:text-base">Productos pedidos</h3>
            <div class="space-y-3 sm:space-y-4">
              {order.items.map((item) => (
                <div class="flex items-center gap-3 sm:gap-4 p-3 sm:p-4 bg-gray-50 rounded-lg">
                  <div class="w-12 h-12 sm:w-16 sm:h-16 bg-gray-200 rounded-lg overflow-hidden flex-shrink-0">
                    <img 
                      src="/images/placeholder-product.jpg"
                      alt={item.name}
                      class="w-full h-full object-cover"
                    />
                  </div>
                  <div class="flex-1 min-w-0">
                    <h4 class="font-medium text-gray-900 text-sm sm:text-base line-clamp-2">{item.name}</h4>
                    <p class="text-xs sm:text-sm text-gray-500">Cantidad: {item.quantity}</p>
                  </div>
                  <div class="text-right flex-shrink-0">
                    <p class="font-medium text-gray-900 text-xs sm:text-sm">
                      ${(item.priceCents / 100).toFixed(2)} c/u
                    </p>
                    <p class="text-xs sm:text-sm text-gray-500">
                      Subtotal: ${((item.priceCents * item.quantity) / 100).toFixed(2)}
                    </p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        <!-- Próximos pasos -->
        <div class="bg-blue-50 rounded-lg p-4 sm:p-6 mb-6 sm:mb-8">
          <h3 class="font-semibold text-blue-900 mb-3 text-sm sm:text-base">¿Qué sigue?</h3>
          <ul class="space-y-2 text-blue-800 text-xs sm:text-sm">
            <li class="flex items-start gap-2">
              <span class="text-blue-600 mt-1">📧</span>
              <span>Te enviaremos una confirmación por email con los detalles del pedido</span>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-blue-600 mt-1">📦</span>
              <span>Prepararemos tu pedido y te notificaremos cuando esté listo para envío</span>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-blue-600 mt-1">🚚</span>
              <span>Recibirás tu pedido en 2-5 días hábiles</span>
            </li>
          </ul>
        </div>

        <!-- Acciones -->
        <div class="text-center space-y-4">
          <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
            <a 
              href="/catalogo" 
              class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors min-h-11 text-sm sm:text-base"
            >
              Seguir comprando
            </a>
            <button 
              onclick="window.print()" 
              class="border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors min-h-11 text-sm sm:text-base"
            >
              Imprimir pedido
            </button>
          </div>
          
          <p class="text-xs sm:text-sm text-gray-500">
            Si tienes alguna pregunta sobre tu pedido, contáctanos a info@tienda.com
          </p>
        </div>
      ) : (
        <!-- Pedido no encontrado -->
        <div class="text-center">
          <div class="bg-red-100 w-20 h-20 sm:w-24 sm:h-24 rounded-full flex items-center justify-center mx-auto mb-4 sm:mb-6">
            <svg class="w-10 h-10 sm:w-12 sm:h-12 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </div>

          <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 mb-3 sm:mb-4">
            Pedido no encontrado
          </h1>
          <p class="text-base sm:text-lg text-gray-600 mb-6 sm:mb-8">
            No pudimos encontrar el pedido solicitado. Verifica el código e intenta nuevamente.
          </p>
          
          <a 
            href="/catalogo" 
            class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors min-h-11 text-sm sm:text-base"
          >
            Volver al catálogo
          </a>
        </div>
      )}
    </div>
  </section>
</BaseLayout>


