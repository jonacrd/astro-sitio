---
interface Category {
  title: string;
  href: string;
  imageUrl?: string;
  description?: string;
}
const { categories = [] } = Astro.props as { categories?: Category[] };
---

<section class="category-banners">
  <div class="container">
    <div class="categories-grid">
      {categories.length === 0 ? (
        <>
          <a href="/catalogo?cat=hombre" class="category-card">
            <div class="category-image">
              <div class="category-icon">ðŸ‘”</div>
            </div>
            <div class="category-content">
              <h3 class="category-title">Hombre</h3>
              <p class="category-description">Explora poleras, jeans y mÃ¡s.</p>
            </div>
          </a>
          <a href="/catalogo?cat=mujer" class="category-card">
            <div class="category-image">
              <div class="category-icon">ðŸ‘—</div>
            </div>
            <div class="category-content">
              <h3 class="category-title">Mujer</h3>
              <p class="category-description">Novedades y bÃ¡sicos.</p>
            </div>
          </a>
          <a href="/catalogo?cat=ninos" class="category-card">
            <div class="category-image">
              <div class="category-icon">ðŸ‘¶</div>
            </div>
            <div class="category-content">
              <h3 class="category-title">NiÃ±os</h3>
              <p class="category-description">Comodidad y estilo.</p>
            </div>
          </a>
          <a href="/catalogo?cat=accesorios" class="category-card">
            <div class="category-image">
              <div class="category-icon">âŒš</div>
            </div>
            <div class="category-content">
              <h3 class="category-title">Accesorios</h3>
              <p class="category-description">Completa tu outfit.</p>
            </div>
          </a>
        </>
      ) : (
        categories.map((c) => (
          <a href={c.href} class="category-card">
            <div class="category-image">
              {c.imageUrl ? (
                <img src={c.imageUrl} alt={c.title} class="category-img" />
              ) : (
                <div class="category-icon">ðŸ“¦</div>
              )}
            </div>
            <div class="category-content">
              <h3 class="category-title">{c.title}</h3>
              {c.description && <p class="category-description">{c.description}</p>}
            </div>
          </a>
        ))
      )}
    </div>
  </div>
</section>

<style>
  .category-banners {
    padding: 1.5rem 0;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    max-height: 300px; /* Altura mÃ¡xima de toda la secciÃ³n */
    overflow: hidden;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;

  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    max-width: 100%;
    max-height: 250px; /* Altura mÃ¡xima del grid */

  }

  .category-card {
    background: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    text-decoration: none;
    color: inherit;
    display: block;
    height: 200px; /* Altura fija para las tarjetas */
    max-height: 200px;
  }

  .category-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  }

  .category-image {
    height: 120px;
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    flex-shrink: 0; /* No se encoja */
  }

  .category-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 100%);
  }

  .category-icon {
    font-size: 3rem;
    color: white;
    z-index: 1;
    position: relative;
  }

  .category-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .category-content {
    padding: 1rem;
    height: 80px; /* Altura fija para el contenido */
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex-shrink: 0;
  }

  .category-title {
    font-size: 1.1rem;
    font-weight: 700;
    color: #2c3e50;
    margin: 0 0 0.4rem 0;
    line-height: 1.3;
  }

  .category-description {
    font-size: 0.85rem;
    color: #6c757d;
    margin: 0;
    line-height: 1.4;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .categories-grid {
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: 1.25rem;
    }
    
    .category-image {
      height: 140px;
    }
    
    .category-icon {
      font-size: 2.5rem;
    }
  }

  @media (max-width: 768px) {
    .category-banners {
      padding: 1.5rem 0;
    }
    
    .container {
      padding: 0 0.75rem;
    }
    
    .categories-grid {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 1rem;
    }
    
    .category-image {
      height: 120px;
    }
    
    .category-icon {
      font-size: 2rem;
    }
    
    .category-content {
      padding: 1.25rem;
    }
    
    .category-title {
      font-size: 1.1rem;
    }
    
    .category-description {
      font-size: 0.85rem;
    }
  }

  @media (max-width: 480px) {
    .category-banners {
      padding: 1rem 0;
    }
    
    .container {
      padding: 0 0.5rem;
    }
    
    .categories-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.75rem;
    }
    
    .category-image {
      height: 100px;
    }
    
    .category-icon {
      font-size: 1.75rem;
    }
    
    .category-content {
      padding: 1rem;
    }
    
    .category-title {
      font-size: 1rem;
    }
    
    .category-description {
      font-size: 0.8rem;
    }
  }

  @media (max-width: 360px) {
    .categories-grid {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
    
    .category-image {
      height: 120px;
    }
    
    .category-icon {
      font-size: 2rem;
    }
  }
</style>