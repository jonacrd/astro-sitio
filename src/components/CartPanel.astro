---
// Panel del carrito original sin React
import { prisma } from '../lib/db';
import { randomUUID } from 'crypto';

// Obtener carrito actual
let cart = null;
let sessionId = null;

try {
  // Simular obtenciÃ³n de sessionId (en el cliente se manejarÃ¡ con cookies)
  const cartData = await prisma.cart.findFirst({
    include: {
      items: {
        include: {
          product: true
        }
      }
    }
  });
  cart = cartData;
} catch (error) {
  console.log('Error al obtener carrito:', error);
}
---

<style>
  .cart-panel {
    position: fixed;
    top: 0;
    right: -400px;
    width: 400px;
    height: 100vh;
    background: #0f172a;
    border-left: 1px solid #334155;
    transition: right 0.3s ease;
    z-index: 1000;
    overflow-y: auto;
  }

  .cart-panel.open {
    right: 0;
  }

  .cart-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .cart-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .cart-header {
    padding: 20px;
    border-bottom: 1px solid #334155;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .cart-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #f8fafc;
    margin: 0;
  }

  .close-cart {
    background: none;
    border: none;
    color: #94a3b8;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 5px;
    border-radius: 5px;
    transition: color 0.2s ease;
  }

  .close-cart:hover {
    color: #f8fafc;
  }

  .cart-content {
    padding: 20px;
  }

  .cart-empty {
    text-align: center;
    padding: 40px 20px;
    color: #94a3b8;
  }

  .cart-empty-icon {
    font-size: 3rem;
    margin-bottom: 20px;
    opacity: 0.5;
  }

  .cart-items {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .cart-item {
    display: flex;
    gap: 15px;
    padding: 15px;
    background: #1e293b;
    border-radius: 10px;
    border: 1px solid #334155;
  }

  .cart-item-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 8px;
  }

  .cart-item-details {
    flex: 1;
  }

  .cart-item-name {
    font-weight: 600;
    color: #f8fafc;
    margin-bottom: 5px;
  }

  .cart-item-price {
    color: #94a3b8;
    font-size: 0.9rem;
  }

  .cart-item-controls {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
  }

  .qty-controls {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .qty-btn {
    width: 30px;
    height: 30px;
    border: 1px solid #475569;
    background: #1e293b;
    color: #f8fafc;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    transition: all 0.2s ease;
  }

  .qty-btn:hover {
    background: #334155;
    border-color: #64748b;
  }

  .qty-display {
    min-width: 40px;
    text-align: center;
    color: #f8fafc;
    font-weight: 600;
  }

  .remove-item {
    background: #dc2626;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.8rem;
    transition: background 0.2s ease;
  }

  .remove-item:hover {
    background: #b91c1c;
  }

  .cart-footer {
    padding: 20px;
    border-top: 1px solid #334155;
    background: #0f172a;
  }

  .cart-total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    font-size: 1.2rem;
    font-weight: 600;
    color: #f8fafc;
  }

  .checkout-btn {
    width: 100%;
    background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    color: white;
    border: none;
    padding: 15px;
    border-radius: 10px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .checkout-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
  }

  .checkout-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .cart-panel {
      width: 100%;
      right: -100%;
    }
  }
</style>

<!-- Overlay -->
<div id="cart-overlay" class="cart-overlay"></div>

<!-- Panel del carrito -->
<div id="cart-panel" class="cart-panel">
  <div class="cart-header">
    <h3 class="cart-title">ðŸ›’ Tu Carrito</h3>
    <button id="close-cart" class="close-cart" aria-label="Cerrar carrito">âœ•</button>
  </div>

  <div class="cart-content">
    {cart && cart.items.length > 0 ? (
      <div class="cart-items">
        {cart.items.map((item) => (
          <div class="cart-item" data-product-id={item.productId}>
            <img 
              src={item.product.imageUrl || '/img/placeholder.jpg'} 
              alt={item.product.name}
              class="cart-item-image"
            />
            <div class="cart-item-details">
              <div class="cart-item-name">{item.product.name}</div>
              <div class="cart-item-price">
                ${(item.product.priceCents / 100).toFixed(2)} c/u
              </div>
              <div class="cart-item-controls">
                <div class="qty-controls">
                  <button class="qty-btn qty-decrease" data-product-id={item.productId}>-</button>
                  <span class="qty-display">{item.qty}</span>
                  <button class="qty-btn qty-increase" data-product-id={item.productId}>+</button>
                </div>
                <button class="remove-item" data-product-id={item.productId}>
                  Quitar
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="cart-empty">
        <div class="cart-empty-icon">ðŸ›’</div>
        <p>Tu carrito estÃ¡ vacÃ­o</p>
        <p>Â¡Agrega algunos productos!</p>
      </div>
    )}
  </div>

  {cart && cart.items.length > 0 && (
    <div class="cart-footer">
      <div class="cart-total">
        <span>Total:</span>
        <span id="cart-total">
          ${cart.items.reduce((total, item) => total + (item.product.priceCents * item.qty), 0) / 100}
        </span>
      </div>
      <button id="checkout-btn" class="checkout-btn">
        Proceder al Checkout
      </button>
    </div>
  )}
</div>

<script>
  // Funcionalidad del carrito
  document.addEventListener('DOMContentLoaded', function() {
    setupCartPanel();
  });

  function setupCartPanel() {
    const cartButton = document.querySelector('.cart-button');
    const cartPanel = document.getElementById('cart-panel');
    const cartOverlay = document.getElementById('cart-overlay');
    const closeCartBtn = document.getElementById('close-cart');
    const checkoutBtn = document.getElementById('checkout-btn');

    // Abrir carrito
    if (cartButton) {
      cartButton.addEventListener('click', () => {
        cartPanel?.classList.add('open');
        cartOverlay?.classList.add('active');
        document.body.style.overflow = 'hidden';
      });
    }

    // Cerrar carrito
    if (closeCartBtn) {
      closeCartBtn.addEventListener('click', closeCart);
    }

    if (cartOverlay) {
      cartOverlay.addEventListener('click', closeCart);
    }

    // Controles de cantidad
    document.querySelectorAll('.qty-increase').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const productId = parseInt(e.target.dataset.productId);
        await updateCartItem(productId, 1);
      });
    });

    document.querySelectorAll('.qty-decrease').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const productId = parseInt(e.target.dataset.productId);
        await updateCartItem(productId, -1);
      });
    });

    // Remover items
    document.querySelectorAll('.remove-item').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const productId = parseInt(e.target.dataset.productId);
        await removeCartItem(productId);
      });
    });

    // Checkout
    if (checkoutBtn) {
      checkoutBtn.addEventListener('click', async () => {
        try {
          const response = await fetch('/api/checkout', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          });

          const result = await response.json();

          if (!response.ok) {
            alert(result.error || 'Error en el checkout');
            return;
          }

          // Redirigir al ticket
          window.location.href = `/ticket/${result.order.orderCode}`;
          
        } catch (error) {
          console.error('Checkout error:', error);
          alert('Error en el checkout');
        }
      });
    }

    function closeCart() {
      cartPanel?.classList.remove('open');
      cartOverlay?.classList.remove('active');
      document.body.style.overflow = '';
    }
  }

  async function updateCartItem(productId, qtyChange) {
    try {
      const response = await fetch('/api/cart/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          productId,
          qty: qtyChange
        })
      });

      if (response.ok) {
        // Recargar la pÃ¡gina para actualizar el carrito
        window.location.reload();
      } else {
        const result = await response.json();
        alert(result.error || 'Error al actualizar carrito');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error al actualizar carrito');
    }
  }

  async function removeCartItem(productId) {
    try {
      const response = await fetch('/api/cart/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          productId,
          qty: 999 // Cantidad grande para eliminar completamente
        })
      });

      if (response.ok) {
        // Recargar la pÃ¡gina para actualizar el carrito
        window.location.reload();
      } else {
        const result = await response.json();
        alert(result.error || 'Error al remover producto');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error al remover producto');
    }
  }
</script>

