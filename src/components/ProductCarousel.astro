---
// Carrusel de productos destacados con animaci√≥n
import { prisma } from '../lib/db';

// Obtener productos destacados de la base de datos
const featuredProducts = await prisma.product.findMany({
  take: 12 // M√°s productos para el carrusel
});
---

<style>
  .carousel-section {
    padding: 80px 20px;
    background: linear-gradient(135deg, #fff 0%, #f8f9fa 50%, #e9ecef 100%);
    overflow: hidden;
    position: relative;
    z-index: 10;
  }

  .carousel-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="%23e74c3c" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="%23e74c3c" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="%23e74c3c" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="%23e74c3c" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="%23e74c3c" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.3;
    z-index: 1;
  }

  .carousel-header {
    text-align: center;
    margin-bottom: 30px;
    position: relative;
    z-index: 2;
  }

  .carousel-title {
    font-size: 3rem;
    font-weight: bold;
    color: #e74c3c;
    margin-bottom: 15px;
    text-shadow: 3px 3px 6px rgba(0,0,0,0.2);
    background: linear-gradient(135deg, #e74c3c, #c0392b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .carousel-subtitle {
    font-size: 1rem;
    color: #6c757d;
    max-width: 500px;
    margin: 0 auto;
    line-height: 1.4;
  }

  .carousel-container {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
    overflow: hidden;
    width: 100%;
    padding: 0 20px;
    margin-bottom: 60px;
    height: 450px;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
    gap: 30px;
  }

  .carousel-item {
    flex: 0 0 280px;
    background: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    position: relative;
    height: 380px;
  }

  .carousel-item:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
  }

  .product-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .carousel-item:hover .product-image {
    transform: scale(1.05);
  }

  .product-info {
    padding: 20px;
  }

  .product-name {
    font-size: 1.1rem;
    font-weight: bold;
    color: #2c3e50;
    margin-bottom: 8px;
    line-height: 1.3;
  }

  .product-category {
    font-size: 0.8rem;
    color: #6c757d;
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .product-price {
    font-size: 1.3rem;
    font-weight: bold;
    color: #e74c3c;
    margin-bottom: 15px;
  }

  .product-stock {
    font-size: 0.8rem;
    color: #27ae60;
    margin-bottom: 15px;
    font-weight: 600;
  }

  .product-stock.low {
    color: #f39c12;
  }

  .product-stock.out {
    color: #e74c3c;
  }

  .add-to-cart-btn {
    width: 100%;
    background: linear-gradient(135deg, #3498db, #2980b9);
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 20px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
  }

  .add-to-cart-btn:hover {
    background: linear-gradient(135deg, #2980b9, #1f618d);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
  }

  .add-to-cart-btn:disabled {
    background: #bdc3c7;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Controles del carrusel */
  .carousel-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 30px;
  }

  .carousel-btn {
    background: linear-gradient(135deg, #e74c3c, #c0392b);
    color: white;
    border: none;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .carousel-btn:hover {
    background: linear-gradient(135deg, #c0392b, #a93226);
    transform: scale(1.1);
  }

  .carousel-btn:disabled {
    background: #bdc3c7;
    cursor: not-allowed;
    transform: none;
  }

  .carousel-indicators {
    display: flex;
    gap: 10px;
  }

  .indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #bdc3c7;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .indicator.active {
    background: #e74c3c;
    transform: scale(1.2);
  }

  /* Responsive */
  @media (max-width: 1200px) {
    .carousel-container {
      height: 400px;
      padding: 0 15px;
    }
    
    .carousel-item {
      flex: 0 0 260px;
      height: 350px;
    }
    
    .product-image {
      height: 180px;
    }
  }

  @media (max-width: 768px) {
    .carousel-container {
      height: 350px;
      padding: 0 10px;
    }
    
    .carousel-item {
      flex: 0 0 240px;
      height: 320px;
    }
    
    .carousel-title {
      font-size: 2.5rem;
    }
    
    .product-image {
      height: 160px;
    }
  }

  @media (max-width: 480px) {
    .carousel-container {
      height: 300px;
      padding: 0 5px;
    }
    
    .carousel-item {
      flex: 0 0 200px;
      height: 280px;
    }
    
    .carousel-title {
      font-size: 2rem;
    }
    
    .product-image {
      height: 140px;
    }
  }
</style>

<section class="carousel-section">
  <div class="carousel-header">
    <h2 class="carousel-title">üî• LO M√ÅS VENDIDO</h2>
    <p class="carousel-subtitle">
      Los productos m√°s populares y mejor valorados por nuestros clientes
    </p>
  </div>

  <div class="carousel-container">
    <div class="carousel-track" id="carousel-track">
      {featuredProducts.map(product => {
        const totalStock = product.stock || 0;
        const price = (product.priceCents || 0) / 100;
        
        let stockStatus = 'in-stock';
        let stockText = `${totalStock} disponibles`;
        
        if (totalStock === 0) {
          stockStatus = 'out';
          stockText = 'Agotado';
        } else if (totalStock < 10) {
          stockStatus = 'low';
          stockText = `Solo ${totalStock}`;
        }

        return (
          <div class="carousel-item">
            <img 
              src={product.imageUrl || '/img/ropa-caballero.png'} 
              alt={product.name}
              class="product-image"
            />
            <div class="product-info">
              <h3 class="product-name">{product.name}</h3>
              <p class="product-category">Producto destacado</p>
              <p class="product-price">${price.toFixed(2)}</p>
              <p class={`product-stock ${stockStatus}`}>{stockText}</p>
              <button 
                class="add-to-cart-btn"
                data-product-id={product.id}
                data-product-name={product.name}
                data-product-price={price}
                data-product-image={product.imageUrl}
                data-stock={totalStock}
                disabled={totalStock === 0}
                onclick={`addToCart(${product.id}, '${product.name}', ${price}, '${product.imageUrl || ''}', ${totalStock})`}
              >
                {totalStock === 0 ? 'Agotado' : 'Agregar'}
              </button>
            </div>
          </div>
        );
      })}
    </div>
  </div>

  <div class="carousel-controls">
    <button class="carousel-btn" id="prev-btn">‚Äπ</button>
    <div class="carousel-indicators" id="carousel-indicators"></div>
    <button class="carousel-btn" id="next-btn">‚Ä∫</button>
  </div>
</section>

<script>
  class ProductCarousel {
    constructor() {
      this.currentIndex = 0;
      this.itemsPerView = 4;
      this.totalItems = document.querySelectorAll('.carousel-item').length;
      this.track = document.getElementById('carousel-track');
      this.prevBtn = document.getElementById('prev-btn');
      this.nextBtn = document.getElementById('next-btn');
      this.indicators = document.getElementById('carousel-indicators');
      
      this.init();
    }

    init() {
      this.createIndicators();
      this.bindEvents();
      this.updateCarousel();
      this.startAutoPlay();
    }

    createIndicators() {
      const totalPages = Math.ceil(this.totalItems / this.itemsPerView);
      for (let i = 0; i < totalPages; i++) {
        const indicator = document.createElement('div');
        indicator.className = `indicator ${i === 0 ? 'active' : ''}`;
        indicator.addEventListener('click', () => this.goToSlide(i));
        this.indicators.appendChild(indicator);
      }
    }

    bindEvents() {
      this.prevBtn.addEventListener('click', () => this.prevSlide());
      this.nextBtn.addEventListener('click', () => this.nextSlide());
      
      // Pausar autoplay al hacer hover
      this.track.addEventListener('mouseenter', () => this.stopAutoPlay());
      this.track.addEventListener('mouseleave', () => this.startAutoPlay());
    }

    updateCarousel() {
      const translateX = -this.currentIndex * (280 + 30); // 280px item + 30px gap
      this.track.style.transform = `translateX(${translateX}px)`;
      
      // Actualizar indicadores
      const indicators = this.indicators.querySelectorAll('.indicator');
      indicators.forEach((indicator, index) => {
        indicator.classList.toggle('active', index === this.currentIndex);
      });
      
      // Actualizar botones
      this.prevBtn.disabled = this.currentIndex === 0;
      this.nextBtn.disabled = this.currentIndex >= Math.ceil(this.totalItems / this.itemsPerView) - 1;
    }

    nextSlide() {
      const maxIndex = Math.ceil(this.totalItems / this.itemsPerView) - 1;
      if (this.currentIndex < maxIndex) {
        this.currentIndex++;
        this.updateCarousel();
      }
    }

    prevSlide() {
      if (this.currentIndex > 0) {
        this.currentIndex--;
        this.updateCarousel();
      }
    }

    goToSlide(index) {
      this.currentIndex = index;
      this.updateCarousel();
    }

    startAutoPlay() {
      this.autoPlayInterval = setInterval(() => {
        const maxIndex = Math.ceil(this.totalItems / this.itemsPerView) - 1;
        if (this.currentIndex >= maxIndex) {
          this.currentIndex = 0;
        } else {
          this.currentIndex++;
        }
        this.updateCarousel();
      }, 4000); // Cambiar cada 4 segundos
    }

    stopAutoPlay() {
      if (this.autoPlayInterval) {
        clearInterval(this.autoPlayInterval);
      }
    }
  }

  // Inicializar carrusel cuando el DOM est√© listo
  document.addEventListener('DOMContentLoaded', () => {
    new ProductCarousel();
  });
</script>
