---
import AddToCartButton from './AddToCartButton.astro';

export interface Props {
  products: Array<{
    id: number;
    name: string;
    description: string;
    priceCents: number;
    stock: number;
    imageUrl?: string;
    slug: string;
  }>;
}

const { products } = Astro.props;

function formatPrice(cents: number): string {
  return new Intl.NumberFormat('es-CL', {
    style: 'currency',
    currency: 'CLP',
    minimumFractionDigits: 0
  }).format(cents);
}
---

<div class="product-grid">
  {products.map(product => (
    <div class="product-card">
      <div class="product-image">
        <img 
          src={product.imageUrl || '/img/placeholder.jpg'} 
          alt={product.name}
          loading="lazy"
        />
        {product.stock <= 0 && (
          <div class="out-of-stock-badge">Sin stock</div>
        )}
      </div>
      
      <div class="product-info">
        <h3 class="product-name">{product.name}</h3>
        <p class="product-description">{product.description}</p>
        
        <div class="product-details">
          <span class="product-price">{formatPrice(product.priceCents)}</span>
          <span class="product-stock">
            {product.stock > 0 ? `${product.stock} disponibles` : 'Agotado'}
          </span>
        </div>
        
        <AddToCartButton 
          productId={product.id} 
          stock={product.stock}
        />
      </div>
    </div>
  ))}
</div>

<style>
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 24px;
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .product-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
  }

  .product-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .product-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image img {
    transform: scale(1.05);
  }

  .out-of-stock-badge {
    position: absolute;
    top: 8px;
    right: 8px;
    background: #f44336;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
  }

  .product-info {
    padding: 16px;
  }

  .product-name {
    font-size: 18px;
    font-weight: 600;
    margin: 0 0 8px 0;
    color: #333;
    line-height: 1.3;
  }

  .product-description {
    font-size: 14px;
    color: #666;
    margin: 0 0 12px 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .product-details {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
  }

  .product-price {
    font-size: 20px;
    font-weight: 700;
    color: #2e7d32;
  }

  .product-stock {
    font-size: 12px;
    color: #666;
    background: #f5f5f5;
    padding: 4px 8px;
    border-radius: 4px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 16px;
      padding: 16px;
    }
    
    .product-image {
      height: 180px;
    }
    
    .product-name {
      font-size: 16px;
    }
    
    .product-price {
      font-size: 18px;
    }
  }

  @media (max-width: 480px) {
    .product-grid {
      grid-template-columns: 1fr;
      gap: 12px;
      padding: 12px;
    }
  }
</style>

