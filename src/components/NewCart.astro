---
// Componente de carrito moderno
---

<div id="new-cart" class="new-cart-container">
  <!-- BotÃ³n flotante del carrito -->
  <button id="cart-toggle" class="cart-toggle-btn" aria-label="Abrir carrito">
    <span class="cart-icon">ðŸ›’</span>
    <span id="cart-count" class="cart-count">0</span>
  </button>

  <!-- Panel del carrito -->
  <div id="cart-panel" class="cart-panel">
    <div class="cart-header">
      <h3>Tu Carrito</h3>
      <button id="cart-close" class="cart-close-btn" aria-label="Cerrar carrito">
        âœ•
      </button>
    </div>
    
    <div id="cart-content" class="cart-content">
      <div class="cart-empty">
        <div class="empty-icon">ðŸ›’</div>
        <p>Tu carrito estÃ¡ vacÃ­o</p>
        <a href="/catalogo" class="btn btn-primary">Comenzar a Comprar</a>
      </div>
    </div>
    
    <div id="cart-footer" class="cart-footer" style="display: none;">
      <div class="cart-summary">
        <div class="summary-line">
          <span>Subtotal:</span>
          <span id="cart-subtotal">$0</span>
        </div>
        <div class="summary-line total">
          <span>Total:</span>
          <span id="cart-total">$0</span>
        </div>
      </div>
      <button id="checkout-btn" class="btn btn-checkout">
        Proceder al Pago
      </button>
    </div>
  </div>
</div>

<style>
  .new-cart-container {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 1000;
  }

  .cart-toggle-btn {
    position: relative;
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #8b7355 0%, #a8a47a 100%);
    border: none;
    border-radius: 50%;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    box-shadow: 0 4px 20px rgba(139, 115, 85, 0.4);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cart-toggle-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(139, 115, 85, 0.6);
  }

  .cart-count {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #ff4757;
    color: white;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    font-size: 0.8rem;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 24px;
  }

  .cart-panel {
    position: absolute;
    bottom: 80px;
    right: 0;
    width: 350px;
    max-height: 500px;
    background: white;
    border-radius: 20px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    transform: translateY(20px) scale(0.95);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .cart-panel.open {
    transform: translateY(0) scale(1);
    opacity: 1;
    visibility: visible;
  }

  .cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    background: linear-gradient(135deg, #8b7355 0%, #a8a47a 100%);
    color: white;
  }

  .cart-header h3 {
    margin: 0;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .cart-close-btn {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    transition: background 0.3s ease;
  }

  .cart-close-btn:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .cart-content {
    max-height: 300px;
    overflow-y: auto;
    padding: 1rem;
  }

  .cart-empty {
    text-align: center;
    padding: 2rem 1rem;
    color: #666;
  }

  .empty-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .cart-empty p {
    margin: 0 0 1.5rem 0;
    font-size: 1.1rem;
  }

  .cart-item {
    display: flex;
    gap: 1rem;
    padding: 1rem 0;
    border-bottom: 1px solid #f0f0f0;
  }

  .cart-item:last-child {
    border-bottom: none;
  }

  .item-image {
    width: 60px;
    height: 60px;
    border-radius: 8px;
    overflow: hidden;
    flex-shrink: 0;
  }

  .item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .item-details {
    flex: 1;
  }

  .item-name {
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    font-size: 0.9rem;
  }

  .item-price {
    color: #8b7355;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
  }

  .item-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .quantity-btn {
    width: 24px;
    height: 24px;
    border: 1px solid #ddd;
    background: white;
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
  }

  .quantity-btn:hover {
    background: #f5f5f5;
  }

  .quantity-input {
    width: 40px;
    text-align: center;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 0.2rem;
    font-size: 0.8rem;
  }

  .remove-btn {
    background: none;
    border: none;
    color: #ff4757;
    cursor: pointer;
    font-size: 0.8rem;
    padding: 0.2rem;
  }

  .cart-footer {
    padding: 1.5rem;
    background: #f8f9fa;
    border-top: 1px solid #e9ecef;
  }

  .cart-summary {
    margin-bottom: 1rem;
  }

  .summary-line {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .summary-line.total {
    font-weight: 600;
    font-size: 1.1rem;
    color: #333;
    border-top: 1px solid #ddd;
    padding-top: 0.5rem;
  }

  .btn {
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    text-align: center;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    display: block;
    width: 100%;
  }

  .btn-primary {
    background: linear-gradient(135deg, #8b7355 0%, #a8a47a 100%);
    color: white;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(139, 115, 85, 0.4);
  }

  .btn-checkout {
    background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    color: white;
  }

  .btn-checkout:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .new-cart-container {
      bottom: 1rem;
      right: 1rem;
    }

    .cart-panel {
      width: 300px;
      right: -50px;
    }

    .cart-toggle-btn {
      width: 50px;
      height: 50px;
      font-size: 1.2rem;
    }

    .cart-count {
      width: 20px;
      height: 20px;
      font-size: 0.7rem;
    }
  }

  @media (max-width: 480px) {
    .cart-panel {
      width: calc(100vw - 2rem);
      right: -100px;
    }
  }
</style>

<script>
  // Funcionalidad bÃ¡sica del carrito
  class NewCart {
    constructor() {
      this.items = [];
      this.isOpen = false;
      this.init();
    }

    init() {
      this.bindEvents();
      this.loadFromStorage();
      this.updateUI();
    }

    bindEvents() {
      const toggleBtn = document.getElementById('cart-toggle');
      const closeBtn = document.getElementById('cart-close');
      const panel = document.getElementById('cart-panel');

      toggleBtn?.addEventListener('click', () => this.toggle());
      closeBtn?.addEventListener('click', () => this.close());

      // Cerrar al hacer clic fuera
      document.addEventListener('click', (e) => {
        if (!panel?.contains(e.target) && !toggleBtn?.contains(e.target)) {
          this.close();
        }
      });
    }

    toggle() {
      this.isOpen ? this.close() : this.open();
    }

    open() {
      const panel = document.getElementById('cart-panel');
      panel?.classList.add('open');
      this.isOpen = true;
    }

    close() {
      const panel = document.getElementById('cart-panel');
      panel?.classList.remove('open');
      this.isOpen = false;
    }

    addItem(product) {
      const existingItem = this.items.find(item => item.id === product.id);
      
      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        this.items.push({
          id: product.id,
          name: product.name,
          price: product.priceCents || product.price,
          image: product.imageUrl || '/img/placeholder.png',
          quantity: 1
        });
      }
      
      this.saveToStorage();
      this.updateUI();
    }

    removeItem(productId) {
      this.items = this.items.filter(item => item.id !== productId);
      this.saveToStorage();
      this.updateUI();
    }

    updateQuantity(productId, quantity) {
      const item = this.items.find(item => item.id === productId);
      if (item) {
        if (quantity <= 0) {
          this.removeItem(productId);
        } else {
          item.quantity = quantity;
          this.saveToStorage();
          this.updateUI();
        }
      }
    }

    getTotal() {
      return this.items.reduce((total, item) => total + (item.price * item.quantity), 0);
    }

    getItemCount() {
      return this.items.reduce((count, item) => count + item.quantity, 0);
    }

    updateUI() {
      this.updateCount();
      this.updateContent();
      this.updateFooter();
    }

    updateCount() {
      const countEl = document.getElementById('cart-count');
      if (countEl) {
        countEl.textContent = this.getItemCount();
        countEl.style.display = this.getItemCount() > 0 ? 'flex' : 'none';
      }
    }

    updateContent() {
      const contentEl = document.getElementById('cart-content');
      if (!contentEl) return;

      if (this.items.length === 0) {
        contentEl.innerHTML = `
          <div class="cart-empty">
            <div class="empty-icon">ðŸ›’</div>
            <p>Tu carrito estÃ¡ vacÃ­o</p>
            <a href="/catalogo" class="btn btn-primary">Comenzar a Comprar</a>
          </div>
        `;
      } else {
        contentEl.innerHTML = this.items.map(item => `
          <div class="cart-item">
            <div class="item-image">
              <img src="${item.image}" alt="${item.name}" />
            </div>
            <div class="item-details">
              <h4 class="item-name">${item.name}</h4>
              <p class="item-price">$${(item.price / 100).toLocaleString()}</p>
              <div class="item-controls">
                <button class="quantity-btn" onclick="window.newCart.updateQuantity(${item.id}, ${item.quantity - 1})">-</button>
                <input type="number" class="quantity-input" value="${item.quantity}" min="1" 
                       onchange="window.newCart.updateQuantity(${item.id}, parseInt(this.value))">
                <button class="quantity-btn" onclick="window.newCart.updateQuantity(${item.id}, ${item.quantity + 1})">+</button>
                <button class="remove-btn" onclick="window.newCart.removeItem(${item.id})">Eliminar</button>
              </div>
            </div>
          </div>
        `).join('');
      }
    }

    updateFooter() {
      const footerEl = document.getElementById('cart-footer');
      const subtotalEl = document.getElementById('cart-subtotal');
      const totalEl = document.getElementById('cart-total');

      if (this.items.length > 0) {
        footerEl.style.display = 'block';
        const total = this.getTotal();
        if (subtotalEl) subtotalEl.textContent = `$${(total / 100).toLocaleString()}`;
        if (totalEl) totalEl.textContent = `$${(total / 100).toLocaleString()}`;
      } else {
        footerEl.style.display = 'none';
      }
    }

    saveToStorage() {
      localStorage.setItem('newCart', JSON.stringify(this.items));
    }

    loadFromStorage() {
      const stored = localStorage.getItem('newCart');
      if (stored) {
        this.items = JSON.parse(stored);
      }
    }

    clear() {
      this.items = [];
      this.saveToStorage();
      this.updateUI();
    }
  }

  // Inicializar el carrito
  document.addEventListener('DOMContentLoaded', () => {
    window.newCart = new NewCart();
  });
</script>
